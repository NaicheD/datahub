{
  "common": {
    "usage": "Usage",
    "field": "Field",
    "date": "Date",
    "na": "N/A",
    "withValue": "With value",
    "betweenAndLowercaseWithName_component": "Between <component1>{{name1}}<component1> and <component2>{{name2}}<component2>",
    "undefined": "Undefined",
    "image": "Image",
    "link": "Link",
    "save": "Save",
    "next": "Next",
    "previous": "Previous",
    "roles": "Roles",
    "domains": "Domains",
    "assets": "Assets",
    "asset": "Asset",
    "state": "State",
    "all": "All",
    "privileges": "Privileges",
    "domain": "Domain",
    "resourceType": "Resource Type",
    "resource": "Resource",
    "platform": "Platform",
    "metadata": "Metadata",
    "refresh": "Refresh",
    "email": "Email",
    "downstream": "Downstream",
    "upstream": "Upstream",
    "users": "Users",
    "topWithName": "Top {{name}}",
    "showLess": "$t('common.show') $t('common.less')",
    "showMore": "$t('common.show') $t('common.more')",
    "show": "Show",
    "none": "None",
    "type": "Type",
    "subtype": "Subtype",
    "noResultsFound": "No results found",
    "navigate": "Navigate",
    "analytics": "Analytics",
    "permissions": "Permissions",
    "close": "Close",
    "share": "Share",
    "details": "Details",
    "back": "Back",
    "copy": "Copy",
    "add": "Add",
    "create": "Create",
    "remove": "Remove",
    "yes": "Yes",
    "cancel": "Cancel",
    "done": "Done",
    "group": "Group",
    "groups": "Groups",
    "role": "Role",
    "govern": "Govern",
    "noData": "No Data",
    "return": "Return",
    "less": "Less",
    "more": "More",
    "loading": "Loading",
    "settings": "Settings",
    "setting": "Setting",
    "developer": "Developer",
    "access": "Access",
    "manage": "Manage",
    "filter": "Filter",
    "basic": "Basic",
    "advanced": "Advanced",
    "preferences": "Preferences",
    "appearance": "Appearance",
    "announcement": "Announcement",
    "token": "Token",
    "tokens": "Tokens",
    "new": "New",
    "Beta": "beta",
    "name": "Name",
    "description": "Description",
    "owner": "Owner",
    "owners": "Owners",
    "revoke": "Revoke",
    "column": "Column",
    "row": "Row",
    "table": "Table",
    "environment": "Environment",
    "entityType": "Entity Type",
    "learnMore": "Learn More",
    "retry": "Retry",
    "degree": "Degree",
    "browse": "Browse",
    "value": "Value",
    "partOfWithName": "Part of {{name}}",
    "containsWithNameNNumber": "Contains {{count}} {{name}}",
    "consumesWithNameNNumber": "Consumes {{count}} {{name}}",
    "foundInWithNameNNumber": "Found in {{count}} {{name}}",
    "noPreviewWasFound": "No preview was found.",
    "reads": "Reads",
    "writes": "Writes",
    "title": "Title",
    "key": "Key",
    "backAction": "Back",
    "saveChanges": "Save Changes",
    "models": "Models",
    "edit": "Edit",
    "deactivate": "DEACTIVATE",
    "activate": "ACTIVATE",
    "download": "Download",
    "filters": "Filters",
    "lineage": "Lineage",
    "ok": "Ok",
    "text": "Text",
    "about": "About",
    "clear": "Clear",
    "glossary": "Glossary",
    "status": "Status",
    "logs": "Logs",
    "rollback": "Rollback",
    "tag": "Tag",
    "username": "Username",
    "password": "Password",
    "fullName": "Full Name",
    "execute": "Execute",
    "actors": "Actors",
    "unknown": "Unknown",
    "materialized": "Materialized",
    "language": "Language",
    "logic": "Logic",
    "assertion": "Assertion",
    "assertions": "Assertions",
    "test": "Tests",
    "noDescription": "No description",
    "actual": "Actual",
    "rowCount": "Row Count",
    "latest":  "Latest",
    "historical": "Historical"
  },
  "test": {
    "testResults": "Test Results",
    "passing": "Passing",
    "failing": "Failing",
    "noEvaluations": "No Evaluations",
    "noTestHaveRun": "No tests have run",
    "allPassing": "All tests are passing",
    "allFailing": "All tests are failing",
    "someFailing": "Some tests are failing",
    "noTestsFound": "No Tests Found",
    "testResume": "{{passingCount}} passing tests, {{failingCount}} failing tests",
    "testStatusTooltip": "This status is based on the most recent run of each test."
  },
  "assertion": {
    "viewLogic": "View Logic",
    "passingAssertion": "Passing assertion",
    "passingOperator": "Passing operator",
    "invalidCount": "Invalid Count",
    "passed": "Passed",
    "failed": "Failed",
    "evaluations": "Evaluations",
    "noEvaluations": "No Evaluations",
    "noAssertionsHaveRun": "No assertions have run",
    "allPassing": "All assertions have passed",
    "allFailing": "All assertions have failed",
    "someFailing": "Some assertions have failed",
    "noAssertionsFound": "No Assertions Found",
    "assertionResume": "{{successCount}} successful assertions, {{failedCount}} failed assertions",
    "assertionStatusTooltip": "This status is based on the most recent run of each assertion.",
    "lastEvaluatedWithDate" : "Last evaluated on {{date}}",
    "datasetColumnCountIs": "Dataset column count is",
    "datasetColumnsAre":"Dataset columns are",
    "dataSetColumnsAre_component" : "Dataset columns <typographyTextStrong>{{fieldNames}}</typographyTextStrong> are",
    "datasetRowCountIs": "Dataset row count is",
    "datasetRowsAre":"Dataset rows are",
    "uniqueValueCountForColumnIs_component": "Unique value count for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "uniqueValueProportionForColumnIs_component": "Unique value proportion for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "nullCountForColumnIs_component": "Null count for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "nullProportionForColumnIs_component": "Null proportion for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "minimumValueForColumnIs_component": "Minimum value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "maximumValueForColumnIs_component": "Maximum value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "meanValueForColumnIs_component": "Mean value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "medianValueForColumnIs_component": "Median value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "standardDeviationForColumnIs_component": "Standard deviation for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "columnValuesAre_component": "Column <typographyTextStrong>{{columnText}}</typographyTextStrong> values are",
    "datasetIs": "Dataset is",
    "deleteAssertionModal": {
      "title": "`Confirm Assertion Removal`",
      "content": "`Are you sure you want to remove this assertion from the dataset?`"
    }
  },
  "onBoarding": {
    "users" : {
      "stepToRenderTitle_component": "<StepTitle level={5}>{{title}}</StepTitle>",
      "usersAssignRoleID_html": "<p>You can assign <strong>Roles</strong> to existing <strong>Users</strong> here.</p><p>Learn more about <strong>Roles</strong> <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"{{link}}\" > here.</a></p>",
      "usersAssignRoleIDTitle": "Assigning Roles",
      "usersInviteLink_html": "<p>Easily share an invite link with your colleagues to onboard them onto DataHub. Optionally assign a <strong>Role</strong> to anyone who joins using the link.</p><p>Learn more about configuring invite links <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"{{link}}\" > here.</a></p>",
      "usersInviteLinkTitle": "Invite New Users",
      "usersSSO_html": "<p>The preferred way to onboard new <strong>Users</strong> is to use <strong>Single Sign-On</strong>.Currently, DataHub supports OIDC SSO.</p><p>Learn more about how to configure <strong>Single Sign-On</strong> <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"{{link}}\" > here.</a></p>",
      "usersSSOTitle": "Configuring Single Sign-On (SSO)",
      "usersIntro_html": "<p>Welcome to DataHub <strong>Users</strong>!</p><p>There are a few different ways to onboard new <strong>Users</strong> onto DataHub.</p>"
    }
  },
  "token": {
    "accessToken": "Access Tokens",
    "personal": "Personal",
    "tokenWillNeverExpire": "This token will never expire.",
    "tokenWillExpireOnAt": "The token will expire on {{date}} at {{time}}}.",
    "expireIn": "Expires in",
    "expireAt": "Expires At",
    "validateTokenRevoke": "Are you sure you want to revoke this token?",
    "validateTokenRevokeDescription": "Anyone using this token will no longer be able to access the DataHub API. You cannot undo this action.",
    "manageAccessToken": "Manage Access Tokens",
    "manageAccessTokenForUseWithAPI": "Manage Access Tokens for use with DataHub APIs.",
    "basedAuthIsDisabled": "Token based authentication is currently disabled. Contact your DataHub administrator to enable this feature.",
    "personalAccessToken": "Personal Access Tokens",
    "personalAccessTokenDescription": "Personal Access Tokens allow you to make programmatic requests to DataHub's APIs. They inherit your privileges and have a finite lifespan. Do not share Personal Access Tokens.",
    "generateNewToken": "Generate new token",
    "noAccessToken": "No Access Tokens!",
    "newPersonalAccessToken": "New Personal Access Token",
    "makeSureYouCopyYourAccessToken": "Make sure to copy your personal access token now. You wonâ€™t be able to see it again.",
    "learnMoreLink": "To learn more about the DataHub APIs, check out the",
    "learnMoreLinkText": "DataHub Docs",
    "toUseATokenExplanationOne": "To use the token, provide it as a",
    "toUseATokenExplanationTwo": "token in the",
    "toUseATokenExplanationThree": "header when making API requests:"
  },
  "permissions": {
    "noPolicies": "No Policies!",
    "searchPolicies": "Search policies...",
    "createNewPolicy": "Create new policy",
    "failedToUpdatePolicies": "Failed to update policies. An unexpected error occurred.",
    "failedToLoadPolicies": "Failed to load policies! An unexpected error occurred.",
    "loadingPolicies": "Loading policies...",
    "successfullySavedPolicy": "Successfully saved policy.",
    "successfullyRemovedPolicy": "Successfully removed policy.",
    "areYouSureRemovePolicy": "Are you sure you want to remove policy?",
    "policyAppliesToGroupsDescription": "Search for specific groups that this policy should apply to, or select `All Groups` to apply it to all groups.",
    "managePermissions": "Manage Permissions",
    "managePermissionsDescription": "View your DataHub permissions. Take administrative actions.",
    "associatedPolicies": "Associated Policies",
    "assignedRoleToUsers": "Assigned Role to users!",
    "noAssignedUsers": "No assigned users",
    "assignRoleToUsers": "Assign the {{role}} role to users",
    "noRoles": "No Roles!",
    "nameForNewPolicy": "A name for your new policy.",
    "typeOfPolicyToCreate": "The type of policy you would like to create.",
    "typeOfPolicyDescription_html": "The <b>Platform</b> policy type allows you to assign top-level DataHub Platform privileges to users.These include managing users and groups, creating policies, viewing analytics dashboards and more.<br /><br />The <b>Metadata</b> policy type allows you to assign metadata privileges to users. These include the ability to manipulate metadata like ownership, tags, documentation associated with Datasets, Charts, Dashboards, & more.",
    "newPolicyDescription": "An optional description for your new policy.",
    "resourceTypeDescription": "Select the types of resources this policy should apply to. If <b>none</b> is selected, policy is applied to <b>all</b> types of resources.",
    "resourceDescription": "Search for specific resources the policy should apply to. If <b>none</b> is selected, policy is applied to <b>all</b> resources of the given type.",
    "noSearchResultsFound": "No search results found",
    "domainDescription": "Search for domains the policy should apply to. If <b>none</b> is selected, policy is applied to <b>all</b> resources in all domains.",
    "privilegesLabel": "Select a set of privileges to permit.",
    "appliesTo": "Applies to",
    "appliesToWithName": "Applies to {{name}}",
    "policyAppliesToLabel": "Select the users & groups that this policy should apply to.",
    "policyAppliesToDescription": "Whether this policy should be apply to owners of the Metadata asset. If true, those who are marked as owners of a Metadata Asset, either directly or indirectly via a Group, will have the selected privileges.",
    "policyAppliesToUserDescription": "Search for specific users that this policy should apply to, or select `All Users` to apply it to all users.",
    "policyBuilderSteps": {
      "configurePrivileges": "Configure Privileges",
      "choosePolicyType": "Choose Policy Type",
      "assignUserAndGroups": "Assign Users & Groups"
    },
    "exitPolicyEditorTitle": "Exit Policy Editor",
    "exitPolicyEditorContent": "Are you sure you want to exit policy editor? All changes will be lost",
    "editAPolicy": "Edit a Policy",
    "createANewPolicy": "Create a new Policy",
    "permissionsTabTypes": {
      "roles": "Roles",
      "policies": "Policies"
    }
  },
  "entity": {
    "foreignKeyTo": "Foreign Key to",
    "noDocumentationAddedYet": "No documentation added yet.",
    "viewEntityWithName": "View {{name}} profile",
    "authorNameWithLink_component": "Added {{timestamp}} by <linkComponent>{{authorName}}</linkComponent>",
    "editor": {
      "exitEditor": "Exit Editor",
      "sureToCloseEditor": "Are you sure you want to close the documentation editor? Any unsaved changes will be lost.",
      "insertRow": {
        "above": "Insert row above",
        "below": "Insert row below",
        "left": "Insert column left",
        "right": "Insert column right"
      }
    },
    "type": {
      "DOMAIN_interval": "(0-1)Domain;",
      "DOMAIN_other": "Domains",
      "DATASET_interval": "(0-1)Dataset;",
      "DATASET_other": "Datasets",
      "CORP_USER_interval": "(0-1)Corp User;",
      "CORP_USER_other": "Corp Users",
      "CORP_GROUP_interval": "(0-1)Corp Group;",
      "CORP_GROUP_other": "Corp Groups",
      "DATA_PLATFORM_interval": "(0-1)Data Platform;",
      "DATA_PLATFORM_other": "Data Platforms",
      "DASHBOARD_interval": "(0-1)Dashboard;",
      "DASHBOARD_other": "Dashboards",
      "CHART_interval": "(0-1)Chart;",
      "CHART_other": "Charts",
      "DATA_FLOW_interval": "(0-1)Data Flow;",
      "DATA_FLOW_other": "Data Flows",
      "DATA_JOB_interval": "(0-1)Data Job;",
      "DATA_JOB_other": "Data Jobs",
      "TAG_interval": "(0-1)Tag;",
      "TAG_other": "Tags",
      "GLOSSARY_TERM_interval": "(0-1)Glossary Term;",
      "GLOSSARY_TERM_other": "Glossary Terms",
      "GLOSSARY_NODE_interval": "(0-1)Term Group;",
      "GLOSSARY_NODE_other": "Term Groups",
      "CONTAINER_interval": "(0-1)Container;",
      "CONTAINER_other": "Containers",
      "MLMODEL_interval": "(0-1)Mlmodel;",
      "MLMODEL_other": "Mlmodels",
      "MLMODEL_GROUP_interval": "(0-1)Mlmodel Group;",
      "MLMODEL_GROUP_other": "Mlmodel Groups",
      "MLFEATURE_TABLE_interval": "(0-1)Mlfeature Table;",
      "MLFEATURE_TABLE_other": "Mlfeature Tables",
      "MLFEATURE_interval": "(0-1)Mlfeature;",
      "MLFEATURE_other": "Mlfeatures",
      "MLPRIMARY_KEY_interval": "(0-1)Mlprimary Key;",
      "MLPRIMARY_KEY_other": "Mlprimary Keys"
    },
    "subtype": {
      "custom sql_interval": "(0-1)Custom SQL;",
      "custom sql_other": "Custom SQL",
      "workbook_interval": "(0-1)Workbook;",
      "workbook_other": "Workbooks",
      "embedded data source_interval": "(0-1)Embedded Data Source;",
      "embedded data source_other": "Embedded Data Sources",
      "published data source_interval": "(0-1)Published Data Source;",
      "published data source_other": "Published Data Sources",
      "topic_interval": "(0-1)Topic;",
      "topic_other": "Topics",
      "table_interval": "(0-1)Table;",
      "table_other": "Tables",
      "view_interval": "(0-1)View;",
      "view_other": "Views",
      "model_interval": "(0-1)Model;",
      "model_other": "Models",
      "explore_interval": "(0-1)Explore;",
      "explore_other": "Explores",
      "index_interval": "(0-1)Index;",
      "index_other": "Index",
      "datastream_interval": "(0-1)DataStream;",
      "datastream_other": "DataStreams",
      "entity_interval": "(0-1)Entity;",
      "entity_other": "Entities",
      "schema_interval": "(0-1)Schema;",
      "schema_other": "Schemas",
      "database_interval": "(0-1)Database;",
      "database_other": "Databases"
    }
  },
  "lineage": {
    "seeColumnLineage": "See Column Lineage",
    "hideColumnLevelLineage": "Hide column level lineage",
    "showColumnLevelLineage": "Show column level lineage",
    "columnLineage": "Column Lineage",
    "clickToRefreshData": "Click to refresh data",
    "entityDistanceFrom_withName": "This entity is a {{distance}} degree connection to {{name}}",
    "entityDistanceFrom_withoutName": "This entity is a {{distance}} degree connection to the source entity",
    "clickToSeeColumnPathFrom": "(0-1)Click to see column path from ;(2-inf)Click to see column paths from ",
    "visualizeLineage": "Visualize Lineage",
    "ordinalSuffix": [
      "th",
      "st",
      "nd",
      "rd"
    ]
  },
  "duration": {
    "never": "Never",
    "now": "Now",
    "year_interval": "(0-1){{count}} year;(2-inf){{count}} years;",
    "month_interval": "(0-1){{count}} month;(2-inf){{count}} months;",
    "week_interval": "(0-1){{count}} week;(2-inf){{count}} weeks;",
    "day_interval": "(0-1){{count}} day;(2-inf){{count}} days;",
    "hour_interval": "(0-1){{count}} hour;(2-inf){{count}} hours;",
    "dateAtTimeWithTimeZone": "{{date}} at {{time}} ({{timeZone}})",
    "allTime": "All Time",
    "UntilWithDate": "Until {{date}}",
    "fromWithDate": "From {{date}}",
    "lastDay_interval": "(0-1)Last {{count}} day;(2-inf)Last {{count}} days",
    "unknownTimeRange": "Unknown time range"
  },
  "reporting": {
    "viewBlamePriorToThisVersion": "View blame prior to this version",
    "profilingRuns":  "Profiling Runs",
    "tableStats":  "Table Stats",
    "columnStats": "Column Stats",
    "rowCount": "Row Count",
    "columnCount":"Column Count",
    "rowCountOverTime": "Row Count Over Time",
    "columnCountOverTime":"Column Count Over Time",
    "nullCountOverTime": "Null Count Over Time",
    "nullPercentageOverTime":"Null Percentage Over Time",
    "distinctCountOverTime": "Distinct Count Over Time",
    "distinctPercentageOverTime":"Distinct Percentage Over Time",
    "showingProfileFromAtWithDateTime": "Showing profile from {{date}} at {{time}}",
    "reportedOnAtWithDateTime": "Reported on {{date}} at {{time}}",
    "queryByMonth_interval": "(0-1){{count}} query / month;(2-inf){{count}} queries / month;"
  },
  "adminHeader": {
    "analyticsText": "Analytics",
    "analyticsTitle": "View DataHub usage analytics",
    "ingestionText": "Ingestion",
    "ingestionTitle": "Connect DataHub to your organization's data sources",
    "glossaryText": "Glossary",
    "glossaryDescription": "View and modify your data dictionary",
    "domainsText": "Domains",
    "domainsDescription": "Manage related groups of data assets",
    "settingsTitle": "Manage your DataHub settings"
  },
  "settings": {
    "manageYourSettings": "Manage your DataHub settings.",
    "usersAndGroups": "Users & Groups",
    "myViews": "My Views",
    "ownershipTypes": "Ownership Types",
    "manageYourAppearanceSettings": "Manage your appearance settings.",
    "showSimplifiedHomepage": "Show simplified homepage",
    "showSimplifiedHomepageDescription": "Limits entity browse cards on homepage to Domains, Charts, Datasets, Dashboards and Glossary Terms",
    "giveYourNewTokenAName": "Give your new token a name.",
    "enterATokenName": "Enter a token name.",
    "aNameForYourToken": "A name for your token",
    "anOptionalDescriptionForYourNewToken": "An optional description for your new token.",
    "aDescriptionForYourToken": "A description for your token"
  },
  "search": {
    "viewAllResultsFor": "View all results for",
    "seeAllResultsWithName_html": "See all <b>{{name}}</b> results",
    "moreYouMayBeInterestedIn": "More you may be interested in",
    "showingNumberOfTotalResults_html_interval": "(0-1)Showing <b>{{number}} - {{index}}</b> of {{count}} result;(2-inf)Showing <b>{{number}} - {{index}}</b> of {{count}} results;",
    "noResultsFoundFor": "No results found for {{name}}",
    "exploreAll": "Explore all",
    "selectWithName": "Select {{name}}"
  },
  "filter": {
    "filterBy": "Filter by",
    "filterByWithName": "Filter by {{name}}",
    "noFilterApplied": "No filters applied.",
    "showResultsThatMatch": "Show results that match",
    "allFilters": "All filters",
    "anyFilter": "Any filter",
    "dataProduct": "Data Product",
    "contains": {
      "true": "contains",
      "false": "does not contain"
    },
    "is": {
      "true": "is",
      "false": "isn't"
    },
    "equals": {
      "true": "equals",
      "false": "not equal"
    },
    "isOf": {
      "true": "is any of",
      "false": "is not"
    },
    "in": {
      "true": "in",
      "false": "not in"
    },
    "null": {
      "true": "is null",
      "false": "not null"
    },
    "greater": {
      "true": "greater than",
      "false": "less than or equal to"
    },
    "less": {
      "true": "less than",
      "false": "greater than or equal to"
    },
    "text": {
      "startWith": "start with",
      "endWith": "end with"
    },
    "view": {
      "saveAsView": "Save as View",
      "saveTheseFiltersAsANewView": "Save these filters as a new View.",
      "viewsAllowYouToEasilySaveOrShareSearchFilters": "Views allow you to easily save or share search filters."
    }
  },
  "form": {
    "altText": "Alt Text"
  },
  "placeholder": {
    "searchForWithName": "Search for {{name}}...",
    "selectAColumn": "Select column",
    "addDescriptionForNewTag": "Add a description for your new tag...",
    "datasetsDashboardsChartsAndMore": "Datasets, Dashboards, Charts, and more...",
    "yourPolicyNamePlaceholder": "Your policy name",
    "newPolicyDescriptionPlaceHolder": "Your policy description",
    "resourceTypeDescriptionPlaceHolder": "Apply to ALL resource types by default. Select types to apply to specific types of entities.",
    "resourceDescriptionPlaceHolder": "Apply to ALL resources by default. Select specific resources to apply to.",
    "domainDescriptionPlaceHolder": "Apply to ALL domains by default. Select domains to apply to specific domains."
  },
  "share": {
    "shareThisViaMail": "Share this {{type}} via email",
    "checkoutThisOn": "Check out this {{type}} on DataHub: {{linkText}}"
  },
  "user": {
    "error": {
      "fetchFromCache": "Could not fetch logged in user from cache.",
      "notFound": "Could not find logged in user."
    }
  },
  "navigation": {
    "backToHome": "Back to Home",
    "yourProfile": "Your Profile",
    "openPanel": "Open the navigation panel",
    "hidePanel": "Hide the navigation panel",
    "viewInWithName": "View in {{name}}",
    "viewLink": "View link"
  },
  "crud": {
    "addWithName": "Add {{name}}",
    "createWithName": "Create {{name}}",
    "delete": "Delete",
    "deleteWithName": "Delete {{name}}",
    "update": "Update",
    "saving": "Saving",
    "success": {
      "addWithName": "Added {{name}}!",
      "removeWithName": "{{name}} removed!",
      "updateWithName": "{{name}} updated!",
      "softDelete": "Soft Deleted"
    },
    "error": {
      "addWithName": "Failed to add {{name}}",
      "loadWithName": "Failed to load {{name}}",
      "add": "Failed to add",
      "createWithName": "Failed to create {{name}}",
      "removeWithName": "Failed to remove {{name}}",
      "revokeWithName": "Failed to revoke {{name}}",
      "updateWithName": "Failed to update {{name}}",
      "remove": "Failed to remove"
    },
    "doYouWantToRemove": {
      "titleWithName": "Do you want to remove {{name}} ?",
      "contentWithTheName": "Are you sure you want to remove the {{name}} ?",
      "contentWithThisName": "Are you sure you want to remove this {{name}} ?"
    }
  },
  "copy": {
    "copyColumnUrn": "Copy Column Urn",
    "copyColumnFieldPath": "Copy Column Field Path",
    "copyLink": "Copy Link",
    "urnTooltip": "Copy URN. An URN uniquely identifies an entity on DataHub.",
    "copyUrnForThis": "Copy the URN for this {{type}}. An URN uniquely identifies an entity on DataHub.",
    "copyShareableLinkToEntity": "Copy a shareable link to this entity."
  },
  "error": {
    "failedToFindRendererCorrespondingToRenderType": "Failed to find renderer corresponding to renderType {{name}}",
    "pageNotFound": "The page your requested was not found",
    "sidebarFailedToLoad": "The sidebar failed to load.",
    "bulkEditIncludeUnauthorizedEntity": "Your bulk edit selection included entities that you are unauthorized to update. The bulk edit being performed will not be saved.",
    "failedToAssignRoleToUsers": "Failed to assign Role to users",
    "unsupportedTestResultType" : "Unsupported Test Result Type {{result}} provided.",
    "errorSection": {
      "ressourcesLabel": {
        "project": "DataHub Project",
        "docs": "DataHub Docs",
        "github": "DataHub GitHub"
      },
      "somethingWentWrong": "Something went wrong.",
      "anUnexpectedErrorOccurred": "An unexpected error occurred. Please try again later, or reach out to your administrator",
      "needSupport": "Need support?",
      "checkOutThisRessources": "Check out these resources:",
      "needSupport_html": "<b>Need support?</b> Check out these resources:"
    }
  }
}