{
  "common": {
    "search": "Search",
    "unauthorized": "Unauthorized",
    "timezone": "Timezone",
    "minute": "Minute,",
    "hour": "Hour",
    "month": "Month",
    "day": "Day",
    "dayOfWeek": "Day of week",
    "capabilities": "Capabilities",
    "recommended": "Recommended",
    "debugMode": "Debug Mode",
    "yaml": "YAML",
    "form": "Form",
    "recipe": "Recipe",
    "total": "Total",
    "viewAll": "View All",
    "schedule": "Schedule",
    "view": "View",
    "notScheduled": "Not scheduled",
    "runs": "Runs",
    "run": "Run",
    "businessGlossary": "Business Glossary",
    "pinned": "Pinned",
    "dashboards": "Dashboards",
    "container": "Container",
    "changed": "Changed",
    "uniqueUsers": "unique users",
    "views": "Views",
    "datasets": "Datasets",
    "charts": "Charts",
    "tasks": "Tasks",
    "pipeline": "Pipeline",
    "dataset": "Dataset",
    "tabular": "Tabular",
    "raw": "Raw",
    "inputs": "Inputs",
    "outputs": "Outputs",
    "operations": "Operations",
    "validation": "Validation",
    "preview": "Preview",
    "summary": "Summary",
    "contents": "Contents",
    "schema": "Schema",
    "noSchema": "No Schema",
    "relatedTerms": "Related Terms",
    "relatedEntities": "Related Entities",
    "user": "User",
    "entity": "Entity",
    "entities": "Entities",
    "members": "Members",
    "memberWithCount_interval": "(0-1)[{{count}} member];(2-inf)[{{count}} members];",
    "outsideDataHub": "outside DataHub",
    "byte": "Byte",
    "time": "Time",
    "set": "Set",
    "map": "Map",
    "useless": "Useless",
    "nominal": "Nominal",
    "ordinal": "Ordinal",
    "binary": "Binary",
    "count": "Count",
    "interval": "Interval",
    "video": "Video",
    "audio": "Audio",
    "sequence": "Sequence",
    "continuous": "Continuous",
    "primaryKey": "Primary Key",
    "trainingMetrics": "Training Metrics",
    "hyperParameters": "Hyper Parameters",
    "sources": "sources",
    "documentation": "Documentation",
    "features": "features",
    "secret": "Secret",
    "success": "Success",
    "original": "Original",
    "properties": "Properties",
    "actionNotSupportedMessage": "This action is not supported for the selected types.",
    "selected_interval": "(0-inf)[{{count}} Selected];",
    "manually": "Manually",
    "dependency_interval": "(0-1)[Dependency];(2-inf)[Dependencies]",
    "hidden": "Hidden",
    "dataProduct": "Data Product",
    "dataProducts": "Data Products",
    "true": "True",
    "false": "False",
    "stats": "Stats",
    "other": "Other",
    "header": "Header",
    "composedOf": "Composed Of",
    "partOf": "Part Of",
    "viewDetails": "View details",
    "notFound": "Not Found",
    "notFoundWithName": "{{name}} Not Found",
    "id": "Id",
    "parent": "Parent",
    "optional": "Optional",
    "moveTo": "Move To",
    "move": "Move",
    "note": "Note",
    "deprecation": "Deprecation",
    "query": "Query",
    "queries": "Queries",
    "noTitle": "No title",
    "usage": "Usage",
    "field": "Field",
    "fields": "Fields",
    "date": "Date",
    "glossaryTerms": "Glossary Terms",
    "tags": "Tags",
    "policies": "Policies",
    "na": "N/A",
    "withValue": "With value",
    "betweenAndLowercaseWithName_component": "Between <component1>{{name1}}<component1> and <component2>{{name2}}<component2>",
    "undefined": "Undefined",
    "image": "Image",
    "link": "Link",
    "save": "Save",
    "next": "Next",
    "previous": "Previous",
    "roles": "Roles",
    "domains": "Domains",
    "assets": "Assets",
    "asset": "Asset",
    "state": "State",
    "all": "All",
    "privileges": "Privileges",
    "domain": "Domain",
    "resourceType": "Resource Type",
    "resource": "Resource",
    "platform": "Platform",
    "metadata": "Metadata",
    "refresh": "Refresh",
    "email": "Email",
    "downstream": "Downstream",
    "upstream": "Upstream",
    "users": "Users",
    "topWithName": "Top {{name}}",
    "read": "Read",
    "readLess": "$t(common.read) $t(common.less)",
    "readMore": "$t(common.read) $t(common.more)",
    "showLess": "$t(common.show) $t(common.less)",
    "showMore": "$t(common.show) $t(common.more)",
    "show": "Show",
    "hide": "Hide",
    "none": "None",
    "type": "Type",
    "subtype": "Subtype",
    "noResultsFound": "No results found",
    "navigate": "Navigate",
    "analytics": "Analytics",
    "permissions": "Permissions",
    "close": "Close",
    "share": "Share",
    "details": "Details",
    "back": "Back",
    "copy": "Copy",
    "copied": "Copied",
    "add": "Add",
    "create": "Create",
    "remove": "Remove",
    "yes": "Yes",
    "cancel": "Cancel",
    "done": "Done",
    "group": "Group",
    "groups": "Groups",
    "groupMember": "Group Member",
    "groupMembers": "Group Members",
    "role": "Role",
    "govern": "Govern",
    "noData": "No Data",
    "return": "Return",
    "less": "Less",
    "more": "More",
    "pending": "Pending",
    "loading": "Loading",
    "settings": "Settings",
    "setting": "Setting",
    "developer": "Developer",
    "access": "Access",
    "manage": "Manage",
    "filter": "Filter",
    "basic": "Basic",
    "advanced": "Advanced",
    "preferences": "Preferences",
    "appearance": "Appearance",
    "announcement": "Announcement",
    "token": "Token",
    "tokens": "Tokens",
    "new": "New",
    "Beta": "beta",
    "name": "Name",
    "description": "Description",
    "owner": "Owner",
    "owners": "Owners",
    "revoke": "Revoke",
    "column": "Column",
    "row": "Row",
    "rows": "Rows",
    "table": "Table",
    "environment": "Environment",
    "entityType": "Entity Type",
    "learnMore": "Learn More",
    "retry": "Retry",
    "degree": "Degree",
    "browse": "Browse",
    "value": "Value",
    "partOfWithName": "Part of {{name}}",
    "containsWithNameNNumber": "Contains {{count}} {{name}}",
    "consumesWithNameNNumber": "Consumes {{count}} {{name}}",
    "foundInWithNameNNumber": "Found in {{count}} {{name}}",
    "noPreviewWasFound": "No preview was found.",
    "reads": "Reads",
    "writes": "Writes",
    "title": "Title",
    "key": "Key",
    "backAction": "Back",
    "saveChanges": "Save Changes",
    "models": "Models",
    "edit": "Edit",
    "deactivate": "DEACTIVATE",
    "activate": "ACTIVATE",
    "download": "Download",
    "downloading": "Downloading",
    "filters": "Filters",
    "lineage": "Lineage",
    "ok": "Ok",
    "text": "Text",
    "about": "About",
    "clear": "Clear",
    "glossary": "Glossary",
    "status": "Status",
    "source": "Source",
    "logs": "Logs",
    "rollback": "Rollback",
    "tag": "Tag",
    "username": "Username",
    "password": "Password",
    "fullName": "Full Name",
    "execute": "Execute",
    "actors": "Actors",
    "unknown": "Unknown",
    "materialized": "Materialized",
    "language": "Language",
    "logic": "Logic",
    "assertion": "Assertion",
    "assertions": "Assertions",
    "test": "Tests",
    "noDescription": "No description",
    "actual": "Actual",
    "rowCount": "Row Count",
    "latest": "Latest",
    "historical": "Historical",
    "noAdditionalDetails": "No additional details",
    "connection": "Connection"
  },
  "domain": {
    "domainIdDescription": "By default, a random UUID will be generated to uniquely identify this domain. If you'd like to provide a custom id instead to more easily keep track of this domain, you may provide it here. Be careful, you cannot easily change the domain id after creation.",
    "domainDescriptionDescription": "An optional description for your new domain. You can change this later.",
    "domainManagementDescription": "View your DataHub Domains. Take administrative actions.",
    "noDomain": "No Domains",
    "nbrOfEntityInDomain": "There are {{value}} entities in this domain."
  },
  "glossary": {
    "emptyGlossary": "Empty Glossary",
    "emptyGlossaryDescription": "Create Terms and Term Groups to organize data assets using a shared vocabulary."
  },
  "term": {
    "noTermNorGroup": "No Terms or Term Groups"
  },
  "group": {
    "groupId": "Group Id",
    "groupIdDescription": "By default, a random UUID will be generated to uniquely identify this group. If you'd like to provide a custom id instead to more easily keep track of this group, you may provide it here. Be careful, you cannot easily change the group id after creation.",
    "noGroups": "No Groups",
    "removeFromGroup": "Remove from Group",
    "cantEditBecauseExternalGroup": "Membership for this group cannot be edited in DataHub as it originates from {{externalGroupType}}",
    "noGroupOwnersAdded": "No group owners added yet",
    "removeUserConfirm": "Are you sure you want to remove this user from the group?",
    "noMemberInGroup": "No members in this group yet."
  },
  "operation": {
    "runId": "Run ID",
    "viewTaskRunDetails": "View task run details",
    "fetchingRuns": "Fetching runs"
  },
  "chart": {
    "onAContainedChart": "on a contained Chart",
    "lastChangedTimeInSource": "The time at which the chart was last changed in the source platform"
  },
  "dashboard": {
    "lastChangedTimeInSource": "The time at which the dashboard was last changed in the source platform"
  },
  "dataset": {
    "linkToTechnicalSchema_component": "Semantic versions for this view were computed using Technical Schema. You can find more info about how DataHub computes versions <linkComp>here</linkComp>",
    "updatedOn": "Updated on ",
    "lastUpdatedDataOn": "Data was last updated in the source platform on",
    "monthlyQueries": "monthly queries",
    "queriesLastMonth": "queries last month",
    "dataSetByteOfStorage": "This dataset consumes {{count}} bytes of storage.",
    "addedColumnWithCount_interval": "(0-1)[{{count}} column was added];(2-inf)[{{count}} columns were added];",
    "removedColumnWithCount_interval": "(0-1)[{{count}} column was removed];(2-inf)[{{count}} columns were removed];",
    "updatedDescriptionWithCount_interval": "(0-1)[{{count}} description was updated];(2-inf)[{{count}} descriptions were updated];"
  },
  "deprecation": {
    "deprecated": "Deprecated",
    "scheduledToBeDecommissionedOnWithDateTimezone": "Scheduled to be decommissioned on {{date}} ({{timezone}})",
    "decommissionDate": "Decommission Date",
    "markAsDeprecated": "Mark as deprecated",
    "markAsUnDeprecated": "Mark as un-deprecated",
    "markAssetsAsUnDeprecatedSuccess": "Marked assets as un-deprecated",
    "markAssetsAsUnDeprecatedError": "Failed to mark assets as un-deprecated",
    "markAssetsAsUnDeprecatedModalTitle": "Confirm Mark as un-deprecated",
    "markAssetsAsUnDeprecatedModalContent": "Are you sure you want to mark this asset as un-deprecated?"
  },
  "test": {
    "testResults": "Test Results",
    "passing": "Passing",
    "failing": "Failing",
    "noEvaluations": "No Evaluations",
    "noTestHaveRun": "No tests have run",
    "allPassing": "All tests are passing",
    "allFailing": "All tests are failing",
    "someFailing": "Some tests are failing",
    "noTestsFound": "No Tests Found",
    "testResume": "{{passingCount}} passing tests, {{failingCount}} failing tests",
    "testStatusTooltip": "This status is based on the most recent run of each test."
  },
  "assertion": {
    "viewLogic": "View Logic",
    "passingAssertion": "Passing assertion",
    "passingOperator": "Passing operator",
    "invalidCount": "Invalid Count",
    "passed": "Passed",
    "failed": "Failed",
    "evaluations": "Evaluations",
    "noEvaluations": "No Evaluations",
    "noAssertionsHaveRun": "No assertions have run",
    "allPassing": "All assertions have passed",
    "allFailing": "All assertions have failed",
    "someFailing": "Some assertions have failed",
    "noAssertionsFound": "No Assertions Found",
    "assertionResume": "{{successCount}} successful assertions, {{failedCount}} failed assertions",
    "assertionStatusTooltip": "This status is based on the most recent run of each assertion.",
    "lastEvaluatedWithDate": "Last evaluated on {{date}}",
    "datasetColumnCountIs": "Dataset column count is",
    "datasetColumnsAre": "Dataset columns are",
    "dataSetColumnsAre_component": "Dataset columns <typographyTextStrong>{{fieldNames}}</typographyTextStrong> are",
    "datasetRowCountIs": "Dataset row count is",
    "datasetRowsAre": "Dataset rows are",
    "uniqueValueCountForColumnIs_component": "Unique value count for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "uniqueValueProportionForColumnIs_component": "Unique value proportion for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "nullCountForColumnIs_component": "Null count for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "nullProportionForColumnIs_component": "Null proportion for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "minimumValueForColumnIs_component": "Minimum value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "maximumValueForColumnIs_component": "Maximum value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "meanValueForColumnIs_component": "Mean value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "medianValueForColumnIs_component": "Median value for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "standardDeviationForColumnIs_component": "Standard deviation for column <typographyTextStrong>{{columnText}}</typographyTextStrong> is",
    "columnValuesAre_component": "Column <typographyTextStrong>{{columnText}}</typographyTextStrong> values are",
    "datasetIs": "Dataset is",
    "deleteAssertionModal": {
      "content": "Are you sure you want to remove this assertion from the Dataset?"
    }
  },
  "onBoarding": {
    "entityProfile": {
      "domains_component": "<paraph>You can view and set this asset's <bold>Domain</bold> here.</paraph><paraph><bold>Domains</bold> are collections of related data assets associated with a specific part of your organization, such as the <bold>Marketing</bold> department.</paraph><paraph>Learn more about <bold>Domains</bold> <aLink>here.</aLink></paraph>",
      "glossaryTerm_component": "<paraph>You can view and add <bold>Glossary Terms</bold> to this asset here.</paraph><paraph><bold>Glossary Terms</bold> are structured, standarized labels for organizing your mission-critical data. For example, if you're marking assets containing PII fields, you might add the Term <bold>Email</bold>.</paraph><paraph>Learn more about <bold>Glossary Terms</bold> <aLink>here.</aLink></paraph>",
      "tags_component": "<paraph>You can view and add <bold>Tags</bold> to this asset here.</paraph><paraph><bold>Tags</bold> are labels for organizing your data. For example, you can add a Tag to mark an asset as <bold>Mission Critical</bold>.</paraph><paraph>Learn more about <bold>Tags</bold> <aLink>here.</aLink></paraph>",
      "owners_component": "<paraph>You can view and add <bold>Owners</bold> to this asset here.</paraph><paraph><bold>Owners</bold> are <bold>Users</bold> or <bold>Groups</bold> who are responsible for managing this asset.</paraph>",
      "schema_component": "<paraph>You can view a Dataset's <bold>Schema</bold> on this tab.</paraph><paraph>You can also view or add <bold>Documentation</bold>, <bold>Tags</bold>, and <bold>Glossary Terms</bold> for specific columns.</paraph>",
      "schemaTitle": "Schema Tab",
      "lineage_component": "<paraph>You can view an entity's <bold>Lineage</bold> on this tab.</paraph><paraph>Data <bold>Lineage</bold> allows you to visualize and understand both the upstream dependencies and downstream consumers of this entity.</paraph><paraph>If this tab is disabled, <bold>Lineage</bold> have not been ingested for this entity.</paraph>",
      "lineageTitle": "Lineage Tab",
      "documentation_component": "<paraph>You can view and edit an entity's <bold>Documentation</bold> on this tab.</paraph><paraph><bold>Documentation</bold> should provide descriptive information about this data asset. It can also contain links to external resources.</paraph>",
      "documentationTitle": "Documentation",
      "properties_component": "<paraph>You can view an entity's key-value <bold>Properties</bold> on this tab. These are sourced from the original Data Platform.</paraph><paraph>If this tab is disabled, <bold>Properties</bold> have not been ingested for this entity.</paraph>",
      "propertiesTitle": "Properties Tab",
      "entities_component": "You can view the <bold>Entities</bold> that belong to a <bold>Container</bold> on this tab.",
      "entitiesTitle": "Entities Tab"
    },
    "homePage": {
      "changeLanguageTitle": "Change Langage",
      "welcomeParaph": {
        "intro_component": "<bold>DataHub</bold> helps you discover and organize the important data within your organization. You can:",
        "listFeatures": {
          "quicklySearch_component": "Quickly <bold>search</bold> for Datasets, Dashboards, Data Pipelines, and more",
          "viewAndUnderstand_component": "View and understand the full <bold>end-to-end Lineage</bold> of how data is created, transformed, and consumed",
          "gainInsight_component": "Gain <bold>insights</bold> about how others within your organization are using data",
          "defineOwnership_component": "Define <bold>ownership</bold> and capture <bold>knowledge</bold> to empower others"
        },
        "getStarted_component": "Let's get started! 🚀",
        "pressKey_component": "Press <bold> Cmd + Ctrl + T</bold> to open up this tutorial at any time."
      },
      "welcomeTitle": "Welcome to DataHub! 👋",
      "ingestion_component": "Start integrating your data sources immediately by navigating to the <bold>Ingestion</bold> page.",
      "ingestionTitle": "Ingest Data",
      "domains_component": "Here are your organization's <bold>Domains</bold>. Domains are collections of data assets - such as Tables, Dashboards, and ML Models - that make it easy to discover information relevant to a particular part of your organization.",
      "domainsTitle": "Explore by Domain",
      "platforms_component": "Here are your organization's <bold>Data Platforms</bold>. Data Platforms represent specific third-party Data Systems or Tools. Examples include Data Warehouses like <bold>Snowflake</bold>, Orchestrators like <bold>Airflow</bold>, and Dashboarding tools like <bold>Looker</bold>.",
      "platformsTitle": "Explore by Platform",
      "mostPopular_component": "Here you'll find the assets that are viewed most frequently within your organization.",
      "mostPopularTitle": "Explore Most Popular",
      "searchBar_component": "<paraph>This is the <bold>Search Bar</bold>. It will serve as your launch point for discovering and collaborating around the data most important to you.</paraph><paraph>Not sure where to start? Click on <bold>Explore All</bold>!</paraph>",
      "searchBarTitle": "Find your Data 🔍"
    },
    "businessGlossary": {
      "businessGlossaryCreateTermGroup_component": "<paraph>Click here to create a new <bold>Term Group</bold>.</paraph><paraph><bold>Term Groups</bold> act as folders, containing Terms and nested Term Groups.</paraph><paraph>For example, there could be a <bold>PII Term Group</bold> containing Terms for different types of PII, such as <bold>Email</bold> or <bold>Phone Number</bold>.</paraph><paraph>Learn more about the <bold>Business Glossary</bold> <aLink>here.</aLink></paraph>",
      "businessGlossaryCreateTermGroupTitle": "Glossary Term Groups",
      "businessGlossaryCreateTerm_component": "<paraph>Click here to create a new <bold>Term</bold>.</paraph><paraph><bold>Terms</bold> are words or phrases with a specific business definition assigned to them.</paraph>",
      "businessGlossaryCreateTermTitle": "Glossary Terms",
      "businessGlossaryIntro_component": "<paraph>Welcome to the <bold>Business Glossary</bold>!</paraph><paraph>The Glossary is a collection of structured, standarized labels you can use to categorize data assets. You can view and create both <bold>Terms</bold> and <bold>Term Groups</bold> here.</paraph>",
      "businessGlossaryIntroTitle": "Business Glossary 📖"
    },
    "domains": {
      "domainIntro_component": "<paraph>Welcome to DataHub <bold>Domains</bold>!</paraph><paraph><bold>Domains</bold> are collections of related data assets associated with a specific part of your organization, such as the <bold>Marketing</bold> department.</paraph><paraph>Learn more about <bold>Domains</bold> <aLink>here.</aLink></paraph>",
      "createDomains_component": "Click here to create a new <bold>Domain</bold>.",
      "createDomainTitle": "Create a new Domain"
    },
    "groups": {
      "createGroups_component": "Click here to create a new <bold>Group</bold>.",
      "createGroupsTitle": "Create a new Group",
      "groupsIntro_component": "<paraph>Welcome to Datahub <bold>Groups</bold>!</paraph><paraph><bold>Groups</bold> are collections of users which can be used to assign ownership to assets and manage access.</paraph><paraph><bold>Groups</bold> can be created natively within DataHub, or synced from your Identity Provider.</paraph><paraph>Learn more about <bold>Groups</bold> <aLink>here.</aLink></paraph>"
    },
    "ingestion": {
      "ingestionCreate_component": "<paraph>Configure new Integrations from DataHub to your <bold>Data Platforms</bold>, including Transactional Databases like <bold>MySQL</bold>, Data Warehouses such as <bold>Snowflake</bold>, Dashboarding tools like <bold>Looker</bold>, and more!</paraph><paraph>Learn more about ingestion and view the full list of supported Integrations <aLink>here.</aLink></paraph>",
      "ingestionCreateTitle": "Create a new Ingestion Source",
      "ingestionRefreshSource_component": "Click to force a refresh of running ingestion sources.",
      "ingestionRefreshSourceTitle": "Refresh Ingestion Sources"
    },
    "lineageGraph": {
      "introLineageGraph_component": "<paraph>You can view the <bold>Lineage Graph</bold> for an entity on this page.</paraph><paraph>Data <bold>Lineage</bold> allows you to visualize and understand both the upstream dependencies and downstream consumers of this entity.</paraph><paraph>Learn more about <bold>Lineage</bold> <aLink>here.</aLink></paraph>",
      "introLineageGraphTitle": "Lineage Graph",
      "timeFilter_component": "You can click which dates you would like to see lineage edges for on this graph. By default, the graph will show edges observed in the last 14 days. Note that manual lineage edges and edges without time information will always be shown.",
      "timeFilterTitle": "Filter Lineage Edges by Date"
    },
    "policies": {
      "introPolicies_component": "<paraph>Welcome to DataHub <bold>Policies</bold>!</paraph><paraph>In most cases, <bold>Roles</bold> are the best option for granting privileges to DataHub users.</paraph><paraph>When more fine-grained control over user and group permissions is required, then <bold>Policies</bold> will do the trick.</paraph><paraph>Learn more about <bold>Policies</bold> <aLink>here.</aLink></paraph>",
      "createPolicies_component": "Click here to create a new <bold>Policy</bold>.",
      "createPoliciesTitle": "Create a new Policy"
    },
    "roles": {
      "introID_component": "<paraph>Welcome to DataHub <bold>Roles</bold>!</paraph><paraph><bold>Roles</bold> are the recommended way to manage permissions on DataHub.</paraph><paraph>DataHub currently supports three out-of-the-box Roles: <bold>Admin</bold>, <bold>Editor</bold> and <bold>Reader</bold>.</paraph><paraph>Learn more about <bold>Roles</bold> and the different permissions for each Role <aLink>here.</aLink></paraph>"
    },
    "search": {
      "searchResultFilterV2_component": "Quickly find relevant assets with our new and improved filter interface! Our latest update has relocated filters to the top of the screen for ease of access.",
      "searchResultFilterV2Title": "Filters Have Moved",
      "searchResultBrowse_component": "Have a clear idea of the schema or folder you're searching for? Easily navigate your organization's platforms inline. Then select a specific container you want to filter your results by.",
      "searchResultBrowseTitle": "🧭 Explore and refine your search by platform",
      "searchResultAdvancedSearch_component": "<bold>Advanced Filters</bold> offer additional capabilities to create more specific search queries.",
      "searchResultAdvancedSearchTitle": "💪 Dive deeper with advanced filters",
      "searchResultFilter_component": "Quickly find relevant assets by applying one or more filters. Try filtering by <bold>Type</bold>, <bold>Owner</bold>, and more!",
      "searchResultFilterTitle": "🕵️ Narrow your search"
    },
    "users": {
      "stepToRenderTitle_component": "<StepTitle level={5}>{{title}}</StepTitle>",
      "usersAssignRoleID_component": "<paraph>You can assign <bold>Roles</bold> to existing <bold>Users</bold> here.</paraph><paraph>Learn more about <bold>Roles</bold> <aLink> here.</aLink></paraph>",
      "usersAssignRoleIDTitle": "Assigning Roles",
      "usersInviteLink_component": "<paraph>Easily share an invite link with your colleagues to onboard them onto DataHub. Optionally assign a <bold>Role</bold> to anyone who joins using the link.</paraph><paraph>Learn more about configuring invite links <aLink> here.</aLink></paraph>",
      "usersInviteLinkTitle": "Invite New Users",
      "usersSSO_component": "<paraph>The preferred way to onboard new <bold>Users</bold> is to use <bold>Single Sign-On</bold>.Currently, DataHub supports OIDC SSO.</paraph><paraph>Learn more about how to configure <bold>Single Sign-On</bold> <aLink> here.</aLink></paraph>",
      "usersSSOTitle": "Configuring Single Sign-On (SSO)",
      "usersIntro_component": "<paraph>Welcome to DataHub <bold>Users</bold>!</paraph><paraph>There are a few different ways to onboard new <bold>Users</bold> onto DataHub.</paraph>"
    }
  },
  "analytics": {
    "highlightsFailedToLoad": "Highlights failed to load",
    "chartsFailedToLoad": "Charts failed to load",
    "domainsFailedToLoad": "Domains failed to load",
    "selectADomain": "Select a domain",
    "specifyDomainOrQueryToGetGranularResults": "Please specify domain or query to get granular results"
  },
  "authentification": {
    "loggingIn": "Logging in",
    "resetCredentials": "Reset credentials",
    "confirmPassword": "Confirm Password",
    "resettingCredentials": "Resetting credentials",
    "signIn": "Sign In",
    "signInWithSso": "Sign in with SSO",
    "signUp": "Sign Up",
    "signingUp": "Signing up",
    "acceptedInvite": "Accepted invite!",
    "failedToAcceptInvite": "Failed to accept invite",
    "failedToLogIn": "Failed to log in.",
    "resetUserPassword": "Reset User Password",
    "resetCredentialSuccess": "Generated new link to reset credentials",
    "resetCredentialError": "Failed to create new link to reset credentials",
    "shareResetLink": "Share reset link",
    "shareResetLinkDescription_component": "Share this reset link to reset the credentials for {{username}}. <bold>This link will expire in 24 hours.</bold>",
    "newLinkMustBeGenerated": "A new link must be generated",
    "newLinkMustBeGeneratedDescription": "You cannot view any old reset links. Please generate a new one below.",
    "generateNewLink": "Generate a new link",
    "generateNewLinkDescription_component": " Generate a new reset link! Note, any old links will <bold>cease to be active</bold>.",
    "generatedNewInviteLink": "Generated new invite link",
    "generateNewInviteLinkError": "Failed to create Invite Token for role {{roleName}}",
    "shareInviteLink": "Share Invite Link",
    "copyInviteLink": "Copy invite link.",
    "copiedInviteLinkToClipboard": "Copied invite link to clipboard",
    "generateNewLinkTitle": "Generate a new link. Any old links will no longer be valid.",
    "copyInviteLinkDescription": "Copy an invite link to send to your users. When they join, users will be automatically assigned to the selected role.",
    "userHasLoggedIn": "The user has logged in."
  },
  "token": {
    "accessToken": "Access Tokens",
    "personal": "Personal",
    "tokenWillNeverExpire": "This token will never expire.",
    "tokenWillExpireOnAt": "The token will expire on {{date}} at {{time}}}.",
    "expireIn": "Expires in",
    "expireAt": "Expires At",
    "validateTokenRevoke": "Are you sure you want to revoke this token?",
    "validateTokenRevokeDescription": "Anyone using this token will no longer be able to access the DataHub API. You cannot undo this action.",
    "manageAccessToken": "Manage Access Tokens",
    "manageAccessTokenForUseWithAPI": "Manage Access Tokens for use with DataHub APIs.",
    "basedAuthIsDisabled": "Token based authentication is currently disabled. Contact your DataHub administrator to enable this feature.",
    "personalAccessToken": "Personal Access Tokens",
    "personalAccessTokenDescription": "Personal Access Tokens allow you to make programmatic requests to DataHub's APIs. They inherit your privileges and have a finite lifespan. Do not share Personal Access Tokens.",
    "generateNewToken": "Generate new token",
    "noAccessToken": "No Access Tokens!",
    "newPersonalAccessToken": "New Personal Access Token",
    "makeSureYouCopyYourAccessToken": "Make sure to copy your personal access token now. You won’t be able to see it again.",
    "learnMoreLink": "To learn more about the DataHub APIs, check out the",
    "learnMoreLinkText": "DataHub Docs",
    "toUseATokenExplanation_component": "To use the token, provide it as a <typographyText>Bearer</typographyText> token in the <typographyText>Authorization</typographyText> header when making API requests:"
  },
  "permissions": {
    "noPolicies": "No Policies!",
    "searchPolicies": "Search policies...",
    "createNewPolicy": "Create new policy",
    "failedToUpdatePolicies": "Failed to update policies. An unexpected error occurred.",
    "failedToLoadPolicies": "Failed to load policies! An unexpected error occurred.",
    "loadingPolicies": "Loading policies...",
    "successfullyDeactivatedPolicy": "Successfully deactivated policy.",
    "successfullyActivatedPolicy": "Successfully activated policy.",
    "successfullySavedPolicy": "Successfully saved policy.",
    "successfullyRemovedPolicy": "Successfully removed policy.",
    "areYouSureRemovePolicy": "Are you sure you want to remove policy?",
    "policyAppliesToGroupsDescription": "Search for specific groups that this policy should apply to, or select `All Groups` to apply it to all groups.",
    "managePermissions": "Manage Permissions",
    "managePermissionsDescription": "View your DataHub permissions. Take administrative actions.",
    "associatedPolicies": "Associated Policies",
    "assignedRoleToUsers": "Assigned Role to users!",
    "noAssignedUsers": "No assigned users",
    "assignRoleToUsers": "Assign the {{role}} role to users",
    "noRoles": "No Roles",
    "nameForNewPolicy": "A name for your new policy.",
    "typeOfPolicyToCreate": "The type of policy you would like to create.",
    "typeOfPolicyDescription_component": "The <bold>Platform</bold> policy type allows you to assign top-level DataHub Platform privileges to users.These include managing users and groups, creating policies, viewing analytics dashboards and more.<br /><br />The <bold>Metadata</bold> policy type allows you to assign metadata privileges to users. These include the ability to manipulate metadata like ownership, tags, documentation associated with Datasets, Charts, Dashboards, & more.",
    "newPolicyDescription": "An optional description for your new policy.",
    "resourceTypeDescription": "Select the types of resources this policy should apply to. If <bold>none</bold> is selected, policy is applied to <bold>all</bold> types of resources.",
    "resourceDescription": "Search for specific resources the policy should apply to. If <bold>none</bold> is selected, policy is applied to <bold>all</bold> resources of the given type.",
    "noSearchResultsFound": "No search results found",
    "domainDescription": "Search for domains the policy should apply to. If <bold>none</bold> is selected, policy is applied to <bold>all</bold> resources in all domains.",
    "privilegesLabel": "Select a set of privileges to permit.",
    "appliesTo": "Applies to",
    "appliesToWithName": "Applies to {{name}}",
    "policyAppliesToLabel": "Select the users & groups that this policy should apply to.",
    "policyAppliesToDescription": "Whether this policy should be apply to owners of the Metadata asset. If true, those who are marked as owners of a Metadata Asset, either directly or indirectly via a Group, will have the selected privileges.",
    "policyAppliesToUserDescription": "Search for specific users that this policy should apply to, or select `All Users` to apply it to all users.",
    "policyBuilderSteps": {
      "configurePrivileges": "Configure Privileges",
      "choosePolicyType": "Choose Policy Type",
      "assignUserAndGroups": "Assign Users & Groups"
    },
    "exitPolicyEditorTitle": "Exit Policy Editor",
    "exitPolicyEditorContent": "Are you sure you want to exit policy editor? All changes will be lost",
    "editAPolicy": "Edit a Policy",
    "createANewPolicy": "Create a new Policy",
    "permissionsTabTypes": {
      "roles": "Roles",
      "policies": "Policies"
    }
  },
  "shared": {
    "addOwners": "Add Owners",
    "noEntities": "No entities",
    "appliedTo": "Applied to",
    "failedToUpdateDescription": "Failed to update description",
    "descriptionUpdated": "Description Updated",
    "failedToSaveTagColor": "Failed to save tag color",
    "colorSaved": "Color Saved"
  },
  "entity": {
    "noDataProducts": "No data products",
    "featureTables": "Feature Tables",
    "deleteAssetMessageConfirmation": "Are you sure you want to mark these assets as deleted? This will hide the assets from future DataHub searches. If the assets are re-ingested from an external data platform, they will be restored.",
    "viewDefinition": "View Definition",
    "seeViewDefinition": "See View Definition",
    "entityRemovedAlert": "This entity is not discoverable via search or lineage graph. Contact your DataHub admin for more information.",
    "nbrDataSourceWithFailedAssertion_interval": "(0-1)[{{count}} data source with failing assertions];(2-inf)[{{count}} data sources with failing assertions];",
    "someDataInputsAreNotHealthy": "Some data inputs are not healthy",
    "allDataInputsAreHealthy": "All data inputs are healthy",
    "unknownDataInputHealth": "Unknown data input health",
    "viewInDataHub": "view in DataHub",
    "cantFindEntityPageContent": "Sorry, we are unable to find this entity in DataHub",
    "glossaryEntityUuidDescription": "By default, a random UUID will be generated to uniquely identify this entity. If you'd like to provide a custom id, you may provide it here. Note that it should be unique across the entire Glossary. Be careful, you cannot easily change the id after creation.",
    "cantDeleteWithChildEntityWithName": "Can't delete {{name}} with child entities.",
    "addAHighlightedQuery": "Add a highlighted query",
    "notAuthorizedToAddQueriesToEntity": "You are not authorized to add Queries to this entity.",
    "highlightedQueries": "Highlighted Queries",
    "sharedQueriesRelevantToThisDataset": "Shared queries relevant to this dataset",
    "recentQueries": "Recent Queries",
    "queriesThatHaveBeenRecentlyRunAgainstThisDataset": "Queries that have been recently run against this dataset",
    "foreignKeyTo": "Foreign Key to",
    "noDocumentationAddedYet": "No documentation added yet.",
    "viewEntityWithName": "View {{name}} profile",
    "authorNameWithLink_component": "Added {{timestamp}} by <linkComponent>{{authorName}}</linkComponent>",
    "unsetDomainTitle": "If you continue, Domain will be removed for the selected assets.",
    "unsetDomainContent": "Are you sure you want to unset Domain for these assets?",
    "unsetDataProductTitle": "If you continue, Data Product will be removed for the selected assets.",
    "unsetDataProductContent": "Are you sure you want to unset Data Product for these assets?",
    "editor": {
      "exitEditor": "Exit Editor",
      "exitQueryEditor": "Exit Query Editor",
      "sureToCloseDocumentationEditor": "Are you sure you want to close the documentation editor? Any unsaved changes will be lost.",
      "sureToExitEditor": "Are you sure you want to exit the editor? Any unsaved changes will be lost.",
      "insertRow": {
        "above": "Insert row above",
        "below": "Insert row below",
        "left": "Insert column left",
        "right": "Insert column right"
      }
    },
    "type": {
      "DOMAIN_interval": "(0-1)[Domain];(2-inf)[Domains];",
      "DATASET_interval": "(0-1)[Dataset];(2-inf)[Datasets];",
      "CORP_USER_interval": "(0-1)[Corp User];(2-inf)[Corp Users];",
      "CORP_GROUP_interval": "(0-1)[Corp Group];(2-inf)[Corp Groups];",
      "DATA_PLATFORM_interval": "(0-1)[Data Platform];(2-inf)[Data Platforms];",
      "DASHBOARD_interval": "(0-1)[Dashboard];(2-inf)[Dashboards];",
      "CHART_interval": "(0-1)[Chart];(2-inf)[Charts];",
      "DATA_FLOW_interval": "(0-1)[Data Flow];(2-inf)[Data Flows];",
      "DATA_JOB_interval": "(0-1)[Data Job];(2-inf)[Data Jobs];",
      "TAG_interval": "(0-1)[Tag];(2-inf)[Tags];",
      "GLOSSARY_TERM_interval": "(0-1)[Glossary Term];(2-inf)[Glossary Terms];",
      "GLOSSARY_NODE_interval": "(0-1)[Term Group];(2-inf)[Term Groups];",
      "CONTAINER_interval": "(0-1)[Container];(2-inf)[Containers];",
      "MLMODEL_interval": "(0-1)[Mlmodel];(2-inf)[Mlmodels];",
      "MLMODEL_GROUP_interval": "(0-1)[Mlmodel Group];(2-inf)[Mlmodel Groups];",
      "MLFEATURE_TABLE_interval": "(0-1)[Mlfeature Table];(2-inf)[Mlfeature Tables];",
      "MLFEATURE_interval": "(0-1)[Mlfeature];(2-inf)[Mlfeatures];",
      "MLPRIMARY_KEY_interval": "(0-1)[Mlprimary Key];(2-inf)[Mlprimary Keys];"
    },
    "subtype": {
      "custom sql_interval": "(0-1)[Custom SQL];(2-inf)[Custom SQL];",
      "workbook_interval": "(0-1)[Workbook];(2-inf)[Workbooks];",
      "embedded data source_interval": "(0-1)[Embedded Data Source];[Embedded Data Sources](2-inf);",
      "published data source_interval": "(0-1)[Published Data Source];(2-inf)[Published Data Sources];",
      "topic_interval": "(0-1)[Topic];(2-inf)[Topics];",
      "table_interval": "(0-1)[Table];(2-inf)[Tables];",
      "view_interval": "(0-1)[View];(2-inf)[Views];",
      "model_interval": "(0-1)[Model];(2-inf)[Models];",
      "explore_interval": "(0-1)[Explore];(2-inf)[Explores];",
      "index_interval": "(0-1)[Index];(2-inf)[Index];",
      "datastream_interval": "(0-1)[DataStream];(2-inf)[DataStreams];",
      "entity_interval": "(0-1)[Entity];(2-inf)[Entities];",
      "asset_interval": "(0-1)[Asset];(2-inf)[Assets];",
      "schema_interval": "(0-1)[Schema];(2-inf)[Schemas];",
      "database_interval": "(0-1)[Database];(2-inf)[Databases];"
    }
  },
  "ownerType": {
    "TECHNICAL_OWNER": {
      "name": "Technical Owner",
      "description": "Involved in the production, maintenance, or distribution of the asset."
    },
    "BUSINESS_OWNER": {
      "name": "Business Owner",
      "description": "Principle stakeholders or domain experts associated with the asset."
    },
    "DATA_STEWARD": {
      "name": "Data Steward",
      "description": "Involved in governance of the asset."
    },
    "NONE": {
      "name": "None",
      "description": "No ownership type specified."
    }
  },
  "ingest": {
    "dbtCloud": {
      "dbtCloudFilterSectionTooltip": "Include or exclude specific dbt Node (resources) from ingestion.",
      "dbtCloudDataPlatformInstanceToolTipThree": "Leave this blank if you have not configured a Data Platform Instance when ingesting from the associated Data Platform.",
      "dbtCloudDataPlatformInstanceToolTipTwo": "This is used to correctly connect the metadata extracted from the Data Platform with that extracted from dbt Cloud.",
      "dbtCloudDataPlatformInstanceToolTipOne": "The DataHub Platform Instance identifier that should be used for the assets extracted from dbt.",
      "dbtCloudDataPlatformConnectionTypeToolTip": "The type of Data Platform that dbt is connected to.",
      "dbtCloudExtractOwnersToolTip": "Try to extract owners from dbt meta properties. Be careful: This can override Owners added by users of DataHub.",
      "dbtCloudCustomMetadataEndpointUrlToolTip": "A custom URL used for extracting Metadata. By default, this metadata is extracted from https://metadata.cloud.getdbt.com/graphql. In most cases, users should NOT need to provide this value.",
      "dbtCloudNodeDenyToolTip": "Exclude specific dbt Nodes (Resources) by providing their name, or a Regular Expression (REGEX). If not provided, all Nodes will be included. Deny patterns always take precedence over Allow patterns.",
      "dbtCloudNodeAllowToolTip": "Only include specific dbt Nodes (resources) by providing their name, or a Regular Expression (REGEX). If not provided, all Nodes will be included.",
      "dbtCloudIncludeTestResultsToolTip": "Whether to include extraction of Test Results or not.",
      "dbtCloudIncludeTestDefinitionsToolTip": "Whether to include extraction of Test Definitions or not.",
      "dbtCloudIncludeSeedsToolTip": "Whether to include extraction of Seeds or not.",
      "dbtCloudIncludeSourcesToolTip": "Whether to include extraction of Sources or not.",
      "dbtCloudIncludeModelsToolTip": "Whether to include extraction of Models or not.",
      "dbtCloudJobIDToolTipThree": "Ensure that your job enables documentation generation on each run by enabling 'Generate Docs' on dbt Cloud.",
      "dbtCloudJobIDToolTipTwo": "The Job ID can be found in the URL on the Jobs tab of dbt Cloud.",
      "dbtCloudJobIDToolTipOne": "The ID of the dbt Cloud job to extract metadata for. Choose the job that serves as the primary mechanism for updating your production data.",
      "dbtCloudProjectIDToolTipTwo": "This can be found in the URL of your dbt instance: https://cloud.getdbt.com/#/accounts/123/projects/PROJECT_ID.",
      "dbtCloudProjectIDToolTipOne": "The ID of the dbt Cloud project to extract metadata for.",
      "dbtCloudAccountIDToolTipTwo": "This can be found in the URL of your dbt instance: https://cloud.getdbt.com/#/accounts/ACCOUNT_ID/.",
      "dbtCloudAccountIDToolTipOne": "The ID of the dbt Cloud account to extract metadata for.",
      "dbtCloudApiTokenToolTipTwo": "For more information about dbt service account tokens, check out the docs <aLink>here</aLink>",
      "dbtCloudApiTokenToolTipOne": "A service account API token for extracting metadata from dbt Cloud APIs. This token must have the privileges required to read metadata (e.g. <bold>Metadata Only</bold> permissions).",
      "section": {
        "nodes": "Nodes"
      },
      "label": {
        "dataPlatformInstance": "Data Platform Instance",
        "dataPlatformConnectionType": "Data Platform (Connection Type)",
        "customMetadataEndpointUrl": "Custom Metadata Endpoint URL",
        "includeTestResults": "Include Test Results",
        "includeTestDefinitions": "Include Test Definitions",
        "includeSeeds": "Include Seeds",
        "includeSources": "Include Sources",
        "includeModels": "Include Models",
        "jobID": "Job ID",
        "apiToken": "API Token"
      }
    },
    "common": {
      "commonStartTimeToolTip": "Earliest date used when processing audit logs for lineage, usage, and more. Default: Last full day in UTC or last time DataHub ingested usage (if stateful ingestion is enabled). Tip: Set this to an older date (e.g. 1 month ago) to bootstrap your first ingestion run, and then reduce for subsequent runs. Changing this may increase the duration of the extraction process.",
      "commonSkipPersonalFoldersToolTip": "Whether to skip ingestion of dashboards in personal folders. Setting this to True will only ingest dashboards in the Shared folder space.",
      "commonExtractOwnersToolTip": "When enabled, extracts ownership from Looker directly. When disabled, ownership is left empty for dashboards and charts.",
      "commonExtractUsageHistoryToolTip": "Experimental (Subject to breaking change) -- Whether to ingest usage statistics for dashboards. Setting this to True will query looker system activity explores to fetch historical dashboard usage.",
      "commonGithubRepoToolTip": "Name of your github repo. e.g. repo for <aLink>https://github.com/datahub-project/datahub</aLink> is datahub-project/datahub.",
      "commonIncludeViewsToolTip": "Extract Views from source.",
      "commonIncludeTablesToolTip": "Extract Tables from source.",
      "commonIngestOwnerToolTip": "Ingest Owner from source. Be careful: This cah override Owners added by users of DataHub.",
      "commonIngestTagsToolTip": "Ingest Tags from the source. Be careful: This can override Tags entered by users of DataHub.",
      "commonTableLineageModeToolTip": "Which table lineage collector mode to use. Check out <aLink>the documentation</aLink> explaining the difference between the three available modes.",
      "commonIncludeUpstreamLineageInReportToolTip": "Useful for debugging lineage information. Set to True to see the raw lineage created internally.",
      "commonEnableStatefulIngestionToolTip": "Remove stale assets from DataHub once they have been deleted in the ingestion source.",
      "commonEnableColumnProfilingToolTip": "Generate Data Profiles for the Columns in extracted Tables. Enabling this may increase the duration of the extraction process.",
      "commonEnableTableProfilingToolTip": "Generate Data Profiles for extracted Tables. Enabling this may increase the duration of the extraction process.",
      "commonIncludeTableLineageToolTip": "Extract Tabel-Level lineage metadata. Enabling this may increase the duration of the extraction process.",
      "commonIncludeLineageToolTip": "Include Table and View lineage in your ingestion.",
      "commonViewDenyToolTip": "Exclude Views with particular names by providing the fully qualified name of a View, or a Regular Expression (REGEX). If not provided, all Views inside allowed Databases and Schemas will be included in ingestion. Deny patterns always take precedence over Allow patterns.",
      "commonViewAllowToolTip": "Only include Views with particular names by providing the fully qualified name of a View, or a Regular Expression (REGEX). If not provided, all Views inside allowed Databases and Schemas will be included in ingestion.",
      "commonTableDenyToolTip": "Exclude Tables with particular names by providing the fully qualified name of a Table, or a Regular Expression (REGEX). If not provided, all Tables inside allowed Databases and Schemas will be included in ingestion. Deny patterns always take precedence over Allow patterns.",
      "commonTableAllowToolTip": "Only include Tables with particular names by providing the fully qualified name of a Table, or a Regular Expression (REGEX). If not provided, all Tables inside allowed Databases and Schemas will be included in ingestion.",
      "commonSchemaDenyToolTip": "Exclude specific Schemas by providing the name of a Schema, or a Regular Expression (REGEX). If not provided, all Schemas inside allowed Databases will be included. Deny patterns always take precedence over Allow patterns.",
      "commonSchemaAllowToolTip": "Only include specific Schemas by providing the name of a Schema, or a Regular Expression (REGEX) to include specific Schemas. If not provided, all Schemas inside allowed Databases will be included.",
      "commonDashboardDenyToolTip": "Exclude specific Dashboards by providing the name of a Dashboard, or a Regular Expression (REGEX). If not provided, all Dashboards will be included. Deny patterns always take precendence over Allow patterns.",
      "commonDashboardAllowToolTip": "Only include specific Dashboards by providing the name of a Dashboard, or a Regular Expression (REGEX). If not provided, all Dashboards will be included.",
      "commonDatabasesDenyToolTip": "Exclude specific Databases by providing the name of a Database, or a Regular Expression (REGEX). If not provided, all Databases will be included. Deny patterns always take precedence over Allow patterns.",
      "commonDatabasesAllowToolTip": "Only include specific Databases by providing the name of a Database, or a Regular Expression (REGEX). If not provided, all Databases will be included.",
      "section": {
        "views": "Views",
        "schemas": "Schemas",
        "databases": "Databases"
      },
      "label": {
        "startTime": "Start Time",
        "skipPersonalFolders": "Skip Personal Folders",
        "extractUsageHistory": "Extract Usage History",
        "includeViews": "Include Views",
        "includeTables": "Include Tables",
        "ingestOwner": "Ingest Owner",
        "ingestTags": "Ingest Tags",
        "tableLineageMode": "Table Lineage Mode",
        "includeUpstreamLineageInReport": "Include Upstream Lineage In Report.",
        "enableStatefulIngestion": "Enable Stateful Ingestion",
        "enableColumnProfiling": "Enable Column Profiling",
        "enableTableProfiling": "Enable Table Profiling"
      }
    },
    "lookml": {
      "lookmlAdvancedSectionTooltip": "In order to ingest LookML data properly, you must either fill out Looker API client information (Base URL, Client ID, Client Secret) or an offline specification of the connection to platform mapping and the project name (Connection To Platform Map, Project Name).",
      "lookmlConnectionToPlatformMap": "A mapping of Looker connection names to DataHub Data Platform and Database names. This is used to create an accurate picture of the Lineage between LookML models and upstream Data Sources.",
      "lookmlDefaultDatabaseToolTip": "The Database associated with assets from the Looker connection.",
      "lookmlPlatformToolTip": "The Data Platform ID in DataHub (e.g. snowflake, bigquery, redshift, mysql, postgres)",
      "lookmlNameToolTip": "Looker connection name. See <aLink>documentation</aLink> for more details.",
      "lookmlExtractExternalLineage": "Extract lineage between Looker and the external upstream Data Sources (e.g. Data Warehouses or Databases).",
      "lookmlProjectName": "The project name within which the LookML files live. See <aLink>this document</aLink> for more details. Required if Looker Base URL is not present.",
      "lookmlLookerClientSecretToolTip": "A Looker API Client Secret. Required if Looker Base URL is present.",
      "lookmlLookerClientID": "The Looker API Client ID. Required if Looker Base URL is present.",
      "lookmlLookerBaseUrlToolTip": "Optional URL to your Looker instance. This is used to generate external URLs for models in your project.",
      "lookmlGithubDeployKeyToolTipTwo": "Learn how to generate an SSH for your GitHub repository <aLink>here</aLink>.",
      "lookmlGithubDeployKeyToolTipOne": "An SSH private key that has been provisioned for read access on the GitHub repository where the LookML is defined.",
      "lookmlGithubRepoToolTip": "The name of the GitHub repository where your LookML is defined.",
      "buttonLabel": {
        "addMapping": "Add mapping"
      },
      "label": {
        "connectionToPlatformMap": "Connection To Platform Map",
        "defaultDatabase": "Default Database",
        "extractExternalLineage": "Extract External Lineage",
        "lookmlProjectName": "LookML Project Name",
        "lookerClientSecret": "Looker Client Secret",
        "lookerClientID": "Looker Client ID",
        "lookerBaseUrl": "Looker Base URL",
        "githubDeployKey": "GitHub Deploy Key"
      }
    },
    "kafka": {
      "kafkaFilterSectionTooltip": "Filter out data assets based on allow/deny regex patterns we match against. Deny patterns take precedence over allow patterns.",
      "kafkaTopicDenyToolTip": "Provide an optional Regular Expression (REGEX) to exclude specific Kafka Topic names from ingestion.",
      "kafkaTopicAllowToolTip": "Provide an optional Regular Expression (REGEX) to include specific Kafka Topic names in ingestion.",
      "saslMechanismToolTip": "The SASL mechanism used for authentication. This field is required if the selected Security Protocol is SASL based.",
      "securityProtocolToolTip": "The Security Protocol used for authentication.",
      "schemaRegistryCredentialsToolTip": "API credentials for the Schema Registry. In Confluent Control Center, you can find these under Schema Registry > API Credentials.",
      "schemaRegistryURLToolTip": "The URL where the schema Schema Registry is hosted. If provided, DataHub will attempt to extract Avro and Protobuf topic schemas from the registry.",
      "kafkaBootstrapToolTip": "The ‘host[:port]’ string (or list of ‘host[:port]’ strings) that we should contact to bootstrap initial cluster metadata.",
      "kafkaPasswordToolTip": "The SASL Password. Required if the Security Protocol is SASL based. In the Confluent Control Center, you can find this in Cluster > Data Integration > API Keys.",
      "kafkaUsernameToolTip": "The SASL username. Required if the Security Protocol is SASL based. In the Confluent Control Center, you can find this in Cluster > Data Integration > API Keys.",
      "section": {
        "filterByTopic": "Filter by Topic"
      },
      "label": {
        "saslMechanism": "SASL Mechanism",
        "securityProtocol": "Security Protocol",
        "schemaRegistryCredentials": "Schema Registry Credentials",
        "schemaRegistryURL": "Schema Registry URL",
        "bootstrapServers": "Bootstrap Servers"
      }
    },
    "bigqueryBeta": {
      "bigqueryFilterSectionTooltip": "Include or exclude specific Projects, Datasets, Tables and Views from ingestion.",
      "bigqueryBetaDatasetsDenyToolTip": "Use regex here.",
      "bigqueryBetaDatasetsAllowToolTip": "Use regex here.",
      "bigqueryBetaProjectDenyToolTip": "Use regex here to filter for project IDs.",
      "bigqueryBetaProjectAllowToolTip": "Use regex here to filter for project IDs.",
      "bigqueryBetaProjectIdToolTip": "The Project ID, which can be found in your service account's JSON Key (project_id)",
      "section": {
        "datasets": "Datasets",
        "projects": "Projects"
      }
    },
    "bigquery": {
      "bigqueryFilterSectionTooltip": "Include or exclude specific Projects, Datasets, Tables and Views from ingestion.",
      "bigqueryClientIDToolTip": "The Client ID, which can be found in your service account's JSON Key (client_id).",
      "bigqueryClientEmailToolTip": "The Client Email, which can be found in your service account's JSON Key (client_email).",
      "bigqueryPrivateKeyToolTip": "The Private key, which can be found in your service account's JSON Key (private_key).",
      "bigqueryPrivateKeyIDToolTip": "The Private Key id, which can be found in your service account's JSON Key (private_key_id)",
      "bigqueryCredentialProjectIDToolTip": "The Project ID, which can be found in your service account's JSON Key (project_id)",
      "bigqueryProjectIDToolTip": "Project ID where you have rights to run queries and create tables.",
      "label": {
        "clientEmail": "Client Email",
        "privateKey": "Private Key",
        "privateKeyID": "Private Key Id",
        "credentialProjectID": "Credentials Project ID"
      }
    },
    "hive": {
      "hiveFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
      "hivePasswordToolTip": "The Hive password for the user.",
      "hiveUsernameToolTip": "The Hive username used to extract metadata.",
      "hiveDatabaseToolTip": "Ingest metadata for a specific Database. If left blank, metadata for all databases will be extracted.",
      "hiveHostPortToolTip": "The host and port where Hive is running. For example, 'hive:9083'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc)."
    },
    "looker": {
      "lookerFilterSectionTooltip": "Include or exclude specific Dashboard, Charts from Looker ingestion.",
      "lookerDenyDashboardToolTip": "Exclude specific Dashboards by providing the numeric id of a Dashboard, or a Regular Expression (REGEX). If not provided, all Dashboards will be included. Deny patterns always take precendence over Allow patterns.",
      "lookerAllowDashboardToolTip": "Only include specific Dashboards by providing the numeric id of a Dashboard, or a Regular Expression (REGEX). If not provided, all Dashboards will be included.",
      "lookerDenyChartToolTip": "Exclude specific Charts by providing the numeric id of a Chart, or a Regular Expression (REGEX). If not provided, all Charts will be included. Deny patterns always take precendence over Allow patterns.",
      "lookerAllowChartToolTip": "Only include specific Charts by providing the numeric id of a Chart, or a Regular Expression (REGEX). If not provided, all Charts will be included.",
      "lookerClientSecretToolTip": "Looker API Client Secret.",
      "lookerClientIDToolTip": "Looker API Client ID.",
      "lookerBaseUrlToolTip": "The URL where your Looker instance is hosted.",
      "section": {
        "charts": "Charts"
      },
      "label": {
        "baseUrl": "Base URL"
      }
    },
    "mariaDB": {
      "mariaDBFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
      "mariaDBPasswordToolTip": "The MariaDB password for the user.",
      "mariaDBUsernameToolTip": "The MariaDB username used to extract metadata.",
      "mariaDBHostAndPortToolTip": "The host and port where MariaDB is running. For example, 'mariadb-server:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc)."
    },
    "mssql": {
      "mssqlFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
      "mssqlPasswordToolTip": "The SQL Server password for the user.",
      "mssqlUsernameToolTip": "The SQL Server username used to extract metadata.",
      "mssqlHostAndPortToolTip": "The host and port where SQL Server is running. For example, 'mssql-server:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc)."
    },
    "mysql": {
      "mysqlFilterSectionTooltip": "Include or exclude specific Databases, Schemas, Tables and Views from ingestion.",
      "mysqlPasswordToolTip": "The MySQL password for the user.",
      "mysqlUsernameToolTip": "The MySQL username used to extract metadata.",
      "mysqlHostAndPortToolTip": "The host and port where Postgres is running. For example, 'localhost:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc)."
    },
    "postgres": {
      "postgresFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
      "postgresPasswordToolTip": "The Postgres password for the user.",
      "postgresUsernameToolTip": "The Postgres username used to extract metadata.",
      "postgresHostAndPortToolTip": "The host and port where Postgres is running. For example, 'postgres:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc)."
    },
    "powerBI": {
      "powerBIFilterSectionTooltip": "Include or exclude specific PowerBI Workspaces from ingestion.",
      "powerBIDenyPatternToolTip": "Exclude specific Workspaces by providing the unique id of a Workspace, or a Regular Expression (REGEX). If not provided, all Workspaces will be included. Deny patterns always take precendence over Allow patterns.",
      "powerBIAllowPatternToolTip": "Only include specific Workspaces by providing the unique id of a Workspace, or a Regular Expression (REGEX). If not provided, all Workspaces will be included.",
      "powerBIExtractOwnershipToolTip": "Extract Owner Metadata defined inside PowerBI. Admin API access is required if this setting is enabled. Note that enabling this may overwrite owners that you add inside DataHub.",
      "powerBIExtractEndorsementsAsTagsToolTip": "Extract PowerBI Endorsements as DataHub Tags.",
      "powerBIIncludeLineageToolTip": "Extract lineage between PowerBI Datasets and the External Tables from which they are derived.",
      "powerBIIncludeReportsToolTip": "Extract PowerBI Reports as Dashboard nodes in DataHub.",
      "powerBIUseAdminAPIOnlyToolTip": "Only use the Admin APIs for extracting information from PowerBI. See the DataHub Ingestion Source Guide for more information.",
      "powerBIIncludeWorkspaceToolTip": "Extract PowerBI Workspaces as Container nodes in DataHub.",
      "powerBIAzureTenantIDToolTip": "The Azure tenant id for your PowerBI instance.",
      "powerBIAzureClientSecretToolTip": "The Azure AD Client Secret",
      "powerBIAzureClientIDToolTip": "The Azure AD Client ID",
      "section": {
        "workspaces": "Workspaces"
      },
      "label": {
        "extractOwnership": "Extract Ownership",
        "extractEndorsementsAsTags": "Extract Endorsements as Tags",
        "includeReports": "Include Reports",
        "useAdminAPIOnly": "Use Admin APIs Only",
        "includeWorkspace": "Include Workspaces",
        "tenantID": "Tenant ID"
      }
    },
    "recipeForms": {
      "presto": {
        "prestoFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
        "prestoPasswordTooTip": "The Presto password for the user.",
        "prestoUsernameToolTip": "The Presto username used to extract metadata.",
        "prestoHostAndPortToolTip": "The host and port where Presto is running. For example, 'presto-server:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc)."
      },
      "redshift": {
        "redshiftFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
        "redshiftPasswordToolTip": "The password of the username.",
        "redshiftUsernameToolTip": "A Redshift username used to extract metadata.",
        "redshiftHostAndPortToolTip": "The host and port where Redshift is running. For example, 'redshift:5439'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc)."
      },
      "snowFlake": {
        "snowFlakeFilterSectionTooltip": "Include or exclude specific Databases, Schemas, Tables and Views from ingestion.",
        "snowFlakeRoleToolTip": "The Role to use when extracting metadata from Snowflake.",
        "snowFlakePasswordToolTip": "Snowflake password.",
        "snowFlakeUsernameToolTip": "Snowflake username.",
        "snowFlakeWarehouseToolTip": "The name of the Snowflake Warehouse to extract metadata from.",
        "snowFlakeAccountIDToolTip": "The Snowflake Account Identifier e.g. myorg-account123, account123-eu-central-1, account123.west-us-2.azure",
        "label": {
          "role": "Role",
          "warehouse": "Warehouse"
        }
      },
      "tableau": {
        "tableauPasswordToolTip": "Tableau password. Only required if Token is not provided.",
        "tableauUsernameToolTip": "Tableau username. Only required if Token is not provided.",
        "tableauTokenValueToolTip": "The value of the Personal Access Token used to extract metadata. Required if authenticating using a Personal Access Token.",
        "tokenNameToolTip": "The name of the Personal Access Token used to extract metadata. Required if authenticating using a Personal Access Token.",
        "tableauSiteToolTip": "The Tableau Site. Required for Tableau Online. Leave this blank to extract from the default site on Tableau Server.",
        "tableauProjectToolTip": "The list of Projects to extract metadata for.",
        "tableauHostUrlToolTip": "The URL where the Tableau instance is hosted.",
        "buttonLabel": {
          "addProject": "Add project"
        },
        "label": {
          "tokenValue": "Token Value",
          "tokenName": "Token Name",
          "tableauSite": "Tableau Site",
          "projects": "Projects",
          "hostURL": "Host URL"
        }
      },
      "trino": {
        "trinoFilterSectionTooltip": "Include or exclude specific Schemas, Tables and Views from ingestion.",
        "trinoPasswordToolTip": "The Trino password for the user.",
        "trinoUsernameToolTip": "The Trino username used to extract metadata.",
        "trinoHostAndPortToolTip": "The host and port where Trino is running. For example, 'trino-server:5432'. Note: this host must be accessible on the network where DataHub is running (or allowed via an IP Allow List, AWS PrivateLink, etc)."
      },
      "unityCatalog": {
        "unityFilterSectionTooltip": "Include or exclude specific Metastores, Catalogs, Schemas, and Tables from ingestion.",
        "unityTableDenyToolTip": "Exclude specific Tables by providing the fully-qualified name of a Table, or a Regular Expression (REGEX) to exclude specific Tables. If not provided, all Tables will be included. Deny patterns always take precedence over Allow patterns.",
        "unityTableAllowToolTip": "Only include specific Tables by providing the fully-qualified name of a Table, or a Regular Expression (REGEX) to include specific Tables. If not provided, all Tables will be included.",
        "unityCatalogDenyToolTip": "Exclude specific Catalogs by providing the name of a Catalog, or a Regular Expression (REGEX) to exclude specific Catalogs. If not provided, all Catalogs will be included. Deny patterns always take precedence over Allow patterns.",
        "unityCatalogAllowToolTip": "Only include specific Catalogs by providing the name of a Catalog, or a Regular Expression (REGEX) to include specific Catalogs. If not provided, all Catalogs will be included.",
        "unityMetaStoreIDDenyToolTip": "Exclude specific Metastores by providing the id of a Metastores, or a Regular Expression (REGEX). If not provided, all Metastores will be included. Deny patterns always take precedence over Allow patterns.",
        "unityMetaStoreIDAllowButtonLabel": "Add pattern",
        "unityMetaStoreIDAllowToolTip": "Only include specific Metastores by providing the id of a Metastore, or a Regular Expression (REGEX) to include specific Metastores. If not provided, all Metastores will be included.",
        "includeColumnLineageToolTip_component": "Extract Column Lineage from Unity Catalog. Note that this requires that your Databricks accounts meets certain requirements. View them <aLink>here.</aLink> Enabling this feature may increase the duration of ingestion.",
        "includeColumnLineageLabel": "Include Column Lineage",
        "includeTableLineageToolTip_component": "Extract Table Lineage from Unity Catalog. Note that this requires that your Databricks accounts meets certain requirements. View them <aLink>here</aLink>",
        "includeTableLineageLabel": "Include Table Lineage",
        "workspaceURLTooltip": "The URL for the Databricks workspace from which to extract metadata.",
        "workspaceURLLabel": "Workspace URL",
        "tokenToolTip": "A personal access token associated with the Databricks account used to extract metadata.",
        "section": {
          "catalogs": "Catalogs",
          "metastores": "Metastores"
        }
      },
      "toolTip": {
        "ingestMetadataForASpecificDatabase": "Ingest metadata for a specific Database."
      },
      "section": {
        "dashboards": "Dashboards",
        "tables": "Tables"
      },
      "label": {
        "extractOwners": "Extract Owners",
        "githubRepo": "GitHub Repo",
        "projectID": "Project ID",
        "includeLineage": "Include Lineage",
        "clientSecret": "Client Secret",
        "clientID": "Client ID",
        "accountID": "Account ID",
        "password": "Password",
        "username": "Username",
        "database": "Database",
        "hostAndPort": "Host and Port",
        "denyPatterns": "Deny Patterns",
        "allowPatterns": "Allow Patterns"
      },
      "buttonLabel": {
        "addPatterns": "Add Patterns"
      }
    },
    "failedToCreateSecret": "Failed to create secret",
    "createSecret": "Create Secret",
    "createdSecret": "Created secret!",
    "secretFieldToolTip_component": "This field requires you to use a DataHub Secret. For more information on Secrets in DataHub, please review <aLink>the docs</aLink>.",
    "testConnection": "Test Connection",
    "thereWasAnUnexpectedErrorWhenTryingToTestYourConnection": "There was an unexpected error when trying to test your connection. Please try again.",
    "somethingWentWrongWithYourConnectionTest": "Something went wrong with your connection test. Please check your recipe and try again.",
    "foundInvalidYamlWithMessage": "Found invalid YAML. {{message}}",
    "pleaseCheckYourRecipeConfiguration": "Please check your recipe configuration.",
    "pleaseFixRecipeLineWithParsedLine": "Please fix line {{parsedLine}} in your recipe.",
    "theFollowingConnectorCapabilitiesAreSupportedWithYourCredentials": "The following connector capabilities are supported with your credentials",
    "aConnectionWasSuccessfullyEstablishedWithSourceName": "A connection was successfully established with {{sourceName}}.",
    "aConnectionWasNotAbleToBeEstablishedWithSourceName": "A connection was not able to be established with {{sourceName}}.",
    "connectionSucceeded": "Connection Succeeded",
    "connectionFailed": "Connection Failed",
    "thisCouldTakeAFewMinutes": "This could take a few minutes.",
    "testingYourConnection": "Testing your connection...",
    "connectionTestWithSourceName": "{{sourceName}} Connection Test",
    "foundInvalidYamlPleaseCheck": "Found invalid YAML. Please check your recipe configuration.",
    "chooseATimezoneForTheSchedule": "Choose a timezone for the schedule.",
    "minuteHourDayMonthDayOfWeek": "$t(common.minute), $t(common.hour), $t(common.day), $t(common.month), $t(common.dayOfWeek)",
    "invalidCronSchedule": "Invalid cron schedule. Cron must be of UNIX form",
    "runIngestionWithoutASchedule": "Running ingestion without a schedule may result in out-of-date information.",
    "runOnASchedule": "Run on a schedule",
    "runAScheduleToolTip": "Enable to run ingestion on a schedule. Running ingestion on a schedule helps to keep the information inside of DataHub up to date.",
    "configureAnIngestionSchedule": "Configure an Ingestion Schedule",
    "forMoreInformationAboutHowToConfigureARecipeText_component": "For more information about how to configure a recipe, see the <aLink>{{sourceName}} source docs.</aLink>",
    "lookMlIngestionCannotText_component": "LookML ingestion <bold>cannot</bold> currently be performed via UI-based ingestion. This is a known problem the DataHub team is working to solve!",
    "ToGetCompleteLookerMetadataIntegrationText_component": "To get complete Looker metadata integration (including Looker views and lineage to the underlying warehouse tables), you must <bold>also</bold> use the <aLink>DataHub lookml module</aLink>.",
    "IHaveSetUpLookMLIngestion": "I have set up LookML ingestion!",
    "youMustAcknowledgeThisMessageToProceed": "You must acknowledge this message to proceed!",
    "configureSourceRecipeWithName": "Configure {{name}} Recipe",
    "advancedTurnOnDebugMode": "Advanced: Turn on debug mode in order to get more verbose logs.",
    "advancedProvideCustomCLIVersionToUseForIngestion": "Advanced: Provide a custom CLI version to use for ingestion.",
    "cliVersion": "CLI Version",
    "provideTheExecutorIDToRouteRequestToText": "Provide the executor id to route execution requests to. The built-in DataHub executor id is 'default'. Do not change this unless you have configured a custom executor.",
    "executorId": "Executor Id",
    "giveThisIngestionSourceAName": "Give this ingestion source a name.",
    "toCompleteTheLookerIntegrationTextWithLink_component": "To complete the Looker integration (including Looker views and lineage to the underlying warehouse tables), you must <bold>also</bold> use the {{link}}.",
    "datahubLookerIngestionSource": "DataHub Looker Ingestion Source",
    "datahubLookMLIngestionSource": "DataHub LookML Ingestion Source",
    "pleaseAddValidIngestionType": "Please add valid ingestion type",
    "foundInvalidYAMLWithMessage": "Found invalid YAML. {{msg}} in order to switch views.",
    "pleaseFixYourRecipe": "Please fix your recipe",
    "fixLineInYourRecipeWithParsedLine": "Fix line {{parsedLine}} in your recipe",
    "searchIngestionSources": "Search ingestion sources",
    "viewLogsThatWereCollectedDuringTheIngestionRun": "View logs that were collected during the ingestion run.",
    "failedToLoadExecutionDetails": "Failed to load execution details",
    "loadingExecutionDetails": "Loading execution details",
    "ingestionRunDetails": "Ingestion Run Details",
    "noOutputFound": "No output found.",
    "noExecutionFound": "No Executions found!",
    "duration": "Duration",
    "startedAt": "Started At",
    "requestedAt": "Requested At",
    "copyExecutionRequestURN": "Copy Execution Request URN",
    "cliExecution": "CLI Execution",
    "scheduledExecution": "Scheduled Execution",
    "manualExecution": "Manual Execution",
    "failedToLoadIngestionExecutionAnErrorOccurred": "Failed to load ingestion executions! An unexpected error occurred.",
    "loadingExecutions": "Loading executions",
    "errorRequestingIngestionRollback": "Error requesting ingestion rollback",
    "successfullyRequestedIngestionRollback": "Successfully requested ingestion rollback",
    "requestingRollback": "Requesting rollback",
    "areYouSureYouWantToContinue": "Are you sure you want to continue?",
    "confirmRollbackModalContent": "Rolling back this ingestion run will remove any new data ingested during the run. This may exclude data that was previously extracted, but did not change during this run.",
    "confirmRollbackModalTitle": "Confirm Rollback",
    "confirmCancelModalContent": "Cancelling an running execution will NOT remove any data that has already been ingested. You can use the DataHub CLI to rollback this ingestion run.",
    "confirmCancelModalTitle": "Confirm Cancel",
    "successfullySubmittedCancellationRequest": "Successfully submitted cancellation request!",
    "failedToCancelExecution": "Failed to cancel execution!",
    "noAssetsWereIngested": "No assets were ingested.",
    "theFollowingAssetTypesWereIngestedDuringThisRun": "The following asset types were ingested during this run.",
    "ingestedAssets": "Ingested Assets",
    "searchSources": "Search sources",
    "createNewSource": "Create new source",
    "failedToLoadIngestionSourcesAnErrorOccurred": "Failed to load ingestion sources! An unexpected error occurred.",
    "loadingIngestionSources": "Loading ingestion sources",
    "confirmIngestionRemovalModalContent": "Are you sure you want to remove this ingestion source? Removing will terminate any scheduled ingestion runs.",
    "confirmIngestionRemovalModalTitle": "Confirm Ingestion Source Removal",
    "confirmSourceExecutionModalContent": "Click 'Execute' to run this ingestion source.",
    "confirmSourceExecutionModalTitle": "Confirm Source Execution",
    "failedToRemoveIngestionSource": "Failed to remove ingestion source",
    "removedIngestionSource": "Removed ingestion source.",
    "failedToCreateIngestionSource": "Failed to create ingestion source!",
    "successfullyCreatedIngestionSource": "Successfully created ingestion source!",
    "successfullyUpdatedIngestionSource": "Successfully updated ingestion source!",
    "failedToSubmitIngestionExecutionRequest": "Failed to submit ingestion execution request!",
    "successfullySubmittedIngestionExecutionRequest": "Successfully submitted ingestion execution request!",
    "noIngestionSource": "No Ingestion Sources!",
    "lastStatus": "Last Status",
    "lastExecution": "Last Execution",
    "executionCount": "Execution Count",
    "copyIngestionSourceURNTitle": "Copy Ingestion Source URN",
    "ui": "UI",
    "cli": "CLI",
    "ingestionSourceIngestedFromCLI": "This source is ingested from the command-line interface (CLI)",
    "recipeViewModalTitle": "View Ingestion Recipe",
    "ExecutionSummaryText": {
      "ingestionStatusNotRecognized": "Ingestion status not recognized",
      "ingestionRollbackFailed": "Ingestion rollback failed",
      "ingestionIsInProcessOfRollingBack": "Ingestion is in the process of rolling back",
      "ingestionWasRolledBack": "Ingestion was rolled back",
      "ingestionWasCancelled": "Ingestion was cancelled",
      "ingestionCompletedWithErrors": "Ingestion completed with errors",
      "ingestionSuccessfullyCompleted": "Ingestion successfully completed",
      "ingestionIsRunning": "Ingestion is running"
    },
    "ExecutionStatusDisplayText": {
      "rollbackFailed": "Rollback Failed",
      "rollingBack": "Rolling Back",
      "rolledBack": "Rolled Back",
      "upForRetry": "Up for Retry",
      "cancelled": "Cancelled",
      "failed": "Failed",
      "succeeded": "Succeeded",
      "running": "Running"
    },
    "secretDescriptionInputPlaceholder": "A description for your secret",
    "secretDescriptionDescription": "An optional description to help keep track of your secret.",
    "secretValueInputPlaceholder": "The value of your secret",
    "secretValueRulePlaceholder": "Enter a value.",
    "secretValueDescription": "The value of your secret, which will be encrypted and stored securely within DataHub.",
    "secretNameInputPlaceholder": "A name for your secret",
    "secretNameNotAllowed": "This secret name is not allowed.",
    "secretNameRulePlaceHolder": "Enter a name.",
    "secretNameDescription": "Give your secret a name. This is what you'll use to reference the secret from your recipes.",
    "createANewSecret": "Create a new Secret",
    "noSecretsFound": "No Secrets found",
    "searchSecrets": "Search secrets...",
    "createNewSecret": "Create new secret",
    "failedToLoadSecrets": "Failed to load secrets!",
    "failedToUpdateIngestionSource": "Failed to update ingestion source!",
    "ingestionSourcesActions": "Create, schedule, and run DataHub ingestion sources.",
    "manageIngestion": "Manage Ingestion"
  },
  "lineage": {
    "viewGraph": "View Graph",
    "showColumns": "Show Columns",
    "collapseRelatedEntitiesIntoASingleLineageNode": "Collapses related entities into a single lineage node",
    "compressLineage": "Compress Lineage",
    "showFullTitle": "Show Full Titles",
    "addEntityPlaceHolderSecondPartWhenNoLength": "entities to add...",
    "noEntitiesWithDirection": "No {{direction}}} entities",
    "platformLogo": "Platform Logo",
    "focusOnEntity": "Focus on Entity",
    "focusOnThisEntityToMakeEdit_component": "<wrapper>Focus</wrapper> on this entity to make {{direction}} edits.",
    "youAreNOtAuthToEditLineage": "You aren't authorized to edit lineage for this entity.",
    "dashboardHasNoDownstreamLineage": "Dashboard entities have no downstream lineage",
    "manageLineageWithDirection": "Manage {{direction}} Lineage",
    "noTimeRangeSelected": "No time range selected",
    "filterLineageByObservedDate": "Filter lineage edges by observed date",
    "findColumn": "Find column...",
    "seeColumnLineage": "See Column Lineage",
    "hideColumnLevelLineage": "Hide column level lineage",
    "showColumnLevelLineage": "Show column level lineage",
    "columnLineage": "Column Lineage",
    "clickToRefreshData": "Click to refresh data",
    "entityDistanceFrom_withName": "This entity is a {{distance}} degree connection to {{name}}",
    "entityDistanceFrom_withoutName": "This entity is a {{distance}} degree connection to the source entity",
    "clickToSeeColumnPathFrom_interval": "(0-1)[Click to see column path from ];(2-inf)[Click to see column paths from ]",
    "visualizeLineage": "Visualize Lineage",
    "ordinalSuffix": [
      "th",
      "st",
      "nd",
      "rd"
    ]
  },
  "duration": {
    "lastXDays_interval": "(0-1)[Yesterday];(2-inf)[Last {{count}} days]",
    "never": "Never",
    "now": "Now",
    "year_interval": "(0-1)[{{count}} year];(2-inf)[{{count}} years];",
    "month_interval": "(0-1)[{{count}} month];(2-inf)[{{count}} months];",
    "week_interval": "(0-1)[{{count}} week];(2-inf)[{{count}} weeks];",
    "day_interval": "(0-1)[{{count}} day];(2-inf)[{{count}} days];",
    "hour_interval": "(0-1)[{{count}} hour];(2-inf)[{{count}} hours];",
    "dateAtTimeWithTimeZone": "{{date}} at {{time}} ({{timeZone}})",
    "allTime": "All Time",
    "UntilWithDate": "Until {{date}}",
    "fromWithDate": "From {{date}}",
    "lastDay_interval": "(0-1)[Last {{count}} day];(2-inf)[Last {{count}} days]",
    "unknownTimeRange": "Unknown time range"
  },
  "reporting": {
    "lastRunWithTime": "Last run {{time}}",
    "viewColumnHistory": "View column history",
    "closeColumnHistory": "Close column history",
    "recentProfiles": "Recent Profiles",
    "historicalTableStats": "Historical Table Stats",
    "historicalColumnStats": "Historical Column Stats",
    "viewingStatsForColumn": "Viewing stats for column",
    "viewingProfilingHistoryForThePast": "Viewing profiling history for the past",
    "profilingHistory": "Profiling History",
    "latestStats": "Latest Stats",
    "rowCountUnknown": "Row Count Unknown",
    "columnCountUnknown": "Column Count Unknown",
    "stdDev": "Std. Dev",
    "sampleValues": "Sample Values",
    "mean": "Mean",
    "median": "Median",
    "nullCount": "Null Count",
    "nullPercent": "Null %",
    "distinctCount": "Distinct Count",
    "distinctPercent": "Distinct %",
    "relationshipAddedByUserOnDate_component": "Relationship added by <bold>{{userName}}</bold> on <bold>{{date}}</bold>",
    "relationshipAddedByUser_component": "Relationship added by <bold>{{userName}}</bold>",
    "lastObservedOnDate": "Last observed on {{date}}",
    "lastObservedDate": "Last observed {{date}}",
    "firstReportedOn": "First reported on {{date}}",
    "reportedWithDate": "Reported {{date}}",
    "createdOnDateWithText": "Created {{text}}on {{date}}",
    "lastSynchronizedDescriptionBeforePlatform": "This represents the time that the entity was last synchronized with ",
    "lastSynchronizedDescriptionNoPlatform": "This represents the time that the entity was last synchronized with the source platform",
    "lastSynchronizedDescriptionWithPlatform_component": "This represents the time that the entity was last synchronized with the source platform",
    "synchronizedOnWithTime": "Synchronized on {{time}}",
    "lastSynchronized": "Last Synchronized",
    "lastSynchronizedWithNameAndTime_component": "This {{name}} was last synchronized <b>{{time}}</b>",
    "synchronizedInThePastWeek_component": "Synchronized in the <b>past week</b>",
    "synchronizedInThePastMonth_component": "Synchronized in the <b>past month</b>",
    "synchronizedMoreThanAMonthAgo_component": "Synchronized <b>more than a month ago</b>",
    "createdOnWithDate": "Created on {{date}}",
    "viewBlamePriorToThisVersion": "View blame prior to this version",
    "profilingRuns": "Profiling Runs",
    "tableStats": "Table Stats",
    "columnStats": "Column Stats",
    "rowCount": "Row Count",
    "columnCount": "Column Count",
    "rowCountOverTime": "Row Count Over Time",
    "columnCountOverTime": "Column Count Over Time",
    "nullCountOverTime": "Null Count Over Time",
    "nullPercentageOverTime": "Null Percentage Over Time",
    "distinctCountOverTime": "Distinct Count Over Time",
    "distinctPercentageOverTime": "Distinct Percentage Over Time",
    "showingProfileFromAtWithDateTime": "Showing profile from {{date}} at {{time}}",
    "reportedOnAtWithDateTime": "Reported on {{date}} at {{time}}",
    "queryByMonth_interval": "(0-1)[{{count}} query / month];(2-inf)[{{count}} queries / month;]"
  },
  "adminHeader": {
    "analyticsText": "Analytics",
    "analyticsTitle": "View DataHub usage analytics",
    "ingestionText": "Ingestion",
    "ingestionTitle": "Connect DataHub to your organization's data sources",
    "glossaryText": "Glossary",
    "glossaryDescription": "View and modify your data dictionary",
    "domainsText": "Domains",
    "domainsDescription": "Manage related groups of data assets",
    "settingsTitle": "Manage your DataHub settings"
  },
  "settings": {
    "manageWithName": "Manage {{name}}",
    "noOwnershipTypesFound": "No Ownership Types found!",
    "manageYourSettings": "Manage your DataHub settings.",
    "usersAndGroups": "Users & Groups",
    "myViews": "My Views",
    "ownershipType": "Ownership Type",
    "ownershipTypes": "Ownership Types",
    "manageIdentitiesDescription": "View your DataHub users & groups. Take administrative actions.",
    "manageOwnershipTypeDescription": "Create, edit, and remove custom Ownership Types.",
    "manageYourAppearanceSettings": "Manage your appearance settings.",
    "showSimplifiedHomepage": "Show simplified homepage",
    "showSimplifiedHomepageDescription": "Limits entity browse cards on homepage to Domains, Charts, Datasets, Dashboards and Glossary Terms",
    "giveYourNewTokenAName": "Give your new token a name.",
    "enterATokenName": "Enter a token name.",
    "aNameForYourToken": "A name for your token",
    "anOptionalDescriptionForYourNewToken": "An optional description for your new token.",
    "aDescriptionForYourToken": "A description for your token"
  },
  "home": {
    "exploreYourData": "Explore your data",
    "noMetadata": "No Metadata Found 😢",
    "welcomeBack": "Welcome back",
    "trySearchingFor": "Try searching for",
    "scheduleDemo": "Schedule a Demo of Managed DataHub",
    "scheduleDemoDescription_component": "DataHub is already the industry's #1 Open Source Data Catalog. <styledLinkDemo>Schedule a demo</styledLinkDemo>  of Acryl DataHub to see the advanced features that take it to the next level or purchase Acryl Cloud on <styledLinkAws>AWS Marketplace</styledLinkAws>!"
  },
  "search": {
    "searchError": "Failed to complete search",
    "loadResultError": "Failed to load results",
    "userOrGroupLabel": "Find a user or group",
    "chooseAnOwnerType": "Choose an owner type",
    "viewAllResultsFor": "View all results for",
    "seeAllResultsWithName_component": "See all <bold>{{name}}</bold> results",
    "moreYouMayBeInterestedIn": "More you may be interested in",
    "showingNumberOfTotalResults_component_interval": "(0-1)[Showing <bold>{{number}} - {{index}}</bold> of {{count}} result];(2-inf)[Showing <bold>{{number}} - {{index}}</bold> of {{count}} results];",
    "noResultsFoundFor": "No results found for {{name}}",
    "exploreAll": "Explore all",
    "selectWithName": "Select {{name}}",
    "modal": {
      "exitSelectionTitle": "Exit Selection",
      "exitSelectionContent_interval": "(0-1)[Are you sure you want to exit? {{count}} selection will be cleared.];(2-inf)[Are you sure you want to exit? {{count}} selections will be cleared.];"
    }
  },
  "filter": {
    "filterBy": "Filter by",
    "filterByWithName": "Filter by {{name}}",
    "noFilterApplied": "No filters applied.",
    "showResultsThatMatch": "Show results that match",
    "allFilters": "All filters",
    "anyFilter": "Any filter",
    "contains": {
      "true": "contains",
      "false": "does not contain"
    },
    "is": {
      "true": "is",
      "false": "isn't"
    },
    "equals": {
      "true": "equals",
      "false": "not equal"
    },
    "isOf": {
      "true": "is any of",
      "false": "is not"
    },
    "in": {
      "true": "in",
      "false": "not in"
    },
    "null": {
      "true": "is null",
      "false": "not null"
    },
    "greater": {
      "true": "greater than",
      "false": "less than or equal to"
    },
    "less": {
      "true": "less than",
      "false": "greater than or equal to"
    },
    "text": {
      "startWith": "start with",
      "endWith": "end with"
    },
    "view": {
      "saveAsView": "Save as View",
      "saveTheseFiltersAsANewView": "Save these filters as a new View.",
      "viewsAllowYouToEasilySaveOrShareSearchFilters": "Views allow you to easily save or share search filters."
    }
  },
  "form": {
    "pleaseConfirmYourPassword": "Please confirm your password",
    "fillInYourEmail": "Please fill in your email",
    "fillInYourName": "Please fill in your name",
    "fillInYourPassword": "Please fill in your password",
    "passwordIsFewerThan8Characters": "Your password is fewer than 8 characters",
    "confirmYourPassword": "Please confirm your password",
    "passwordsDoNotMatch": "Your passwords do not match",
    "fillInYourTitle": "Please fill in your title",
    "enterValidDomainId": "Please enter a valid Domain id",
    "giveYourNewDomainAName": "Give your new Domain a name",
    "enterCorrectGroupName": "Please enter correct Group name",
    "enterAGroupName": "Enter a Group name",
    "altText": "Alt Text",
    "enterANameWithName": "Enter a {{name}} name.",
    "enterAValidEntityId": "Please enter a valid entity id",
    "provideAValidLdap": "Please provide a valid LDAP!",
    "urlRequired": "A URL is required.",
    "validUrlRequired": "This field must be a valid url.",
    "labelRequired": "A URL is required.",
    "ownershipTypeNameRequired": "Please input a name for the ownership type",
    "validEmailRequired": "Please enter valid email"
  },
  "placeholder": {
    "domainDescription": "A description for your domain",
    "domainName": "A name for your Domain",
    "groupName": "A name for your group",
    "groupDescription": "A description for your group",
    "revenueDashboards": "Revenue Dashboards",
    "shortLabelForLink": "A short label for this link",
    "filterWithName": "Filter {{name}}...",
    "searchWithName": "Search {{name}}...",
    "searchInWithName": "Search in {{name}}...",
    "searchForWithName": "Search for {{name}}...",
    "searchByWithName": "Search by {{name}}...",
    "searchFor": "Search for",
    "searchForUsersOrGroups": "Search for users or groups",
    "selectAColumn": "Select column",
    "addDescriptionForNewTag": "Add a description for your new tag...",
    "datasetsDashboardsChartsAndMore": "Datasets, Dashboards, Charts, and more...",
    "yourPolicyNamePlaceholder": "Your policy name",
    "newPolicyDescriptionPlaceHolder": "Your policy description",
    "resourceTypeDescriptionPlaceHolder": "Apply to ALL resource types by default. Select types to apply to specific types of entities.",
    "resourceDescriptionPlaceHolder": "Apply to ALL resources by default. Select specific resources to apply to.",
    "domainDescriptionPlaceHolder": "Apply to ALL domains by default. Select domains to apply to specific domains."
  },
  "share": {
    "viewSource": "View Source",
    "slackChannel": "Slack Channel",
    "shareThisViaMail": "Share this {{type}} via email",
    "checkoutThisOn": "Check out this {{type}} on DataHub: {{linkText}}",
    "scheduleADemo": "Schedule a Demo",
    "downloadAs": "Download as...",
    "csv": {
      "preparing": {
        "message": "Preparing Download",
        "description": "Creating CSV to download",
        "descriptionWithCount_interval": "(0-1)[Creating CSV with {{count}} entitiy to download];(2-inf)[Creating CSV with {{count}} entities to download];"
      },
      "error": {
        "message": "Download Failed",
        "description": "The CSV file could not be downloaded"
      }
    }
  },
  "user": {
    "noUser": "No user",
    "inviteUser": "Invite Users",
    "assignRoleTitle": "Would you like to assign the role {{roleName}} to user {{username}}",
    "removeRoleTitle": "Would you like to remove {{username}}'s existing role?",
    "assignRoleSuccess": "Assigned role {{roleName}} to user {{username}}!",
    "removeRoleSuccess": "Removed role from user {{username}}!",
    "assignRoleError": "Failed to assign role {{roleName}} to user {{username}}",
    "removeRoleError": "Failed to remove role from {{username}}",
    "error": {
      "fetchFromCache": "Could not fetch logged in user from cache.",
      "notFound": "Could not find logged in user."
    }
  },
  "navigation": {
    "backToHome": "Back to Home",
    "yourProfile": "Your Profile",
    "openPanel": "Open the navigation panel",
    "hidePanel": "Hide the navigation panel",
    "viewInWithName": "View in {{name}}",
    "viewLink": "View link"
  },
  "crud": {
    "makeWithName": "Make {{name}}",
    "setWithName": "Set {{name}}",
    "unsetWithName": "Set {{name}}",
    "addToAssets": "Add to assets",
    "addToAssetsWithName": "Add {{name}} to assets",
    "addAssetsToWithName": "Add assets to {{name}}",
    "addAssets": "Add assets",
    "addWithName": "Add {{name}}",
    "createWithName": "Create {{name}}",
    "delete": "Delete",
    "removeWithName": "Remove {{name}}",
    "deleteWithName": "Delete {{name}}",
    "update": "Update",
    "editWithName": "Edit {{name}}",
    "saving": "Saving",
    "adding": "Adding",
    "updating": "Updating",
    "deleting": "Deleting",
    "removing": "Removing",
    "success": {
      "changesSaved": "Changes saved.",
      "addAssetsToWithName": "Added assets to {{name}}!",
      "addWithName": "Added {{name}}!",
      "createWithName": "Created {{name}}!",
      "SuccessfullyCreateWithName": "Successfully created {{name}}!",
      "update": "Updated!",
      "updateWithName": "{{name}} updated!",
      "updatedWithNameReverse": "Updated {{name}}!",
      "editWithName": "{{name}} edited!",
      "moveWithName": "{{name}} moved!",
      "removeWithName": "{{name}} removed!",
      "removeWithNameReverse": "Removed {{name}}.",
      "deleteWithName": "{{name}} deleted!",
      "softDelete": "Soft Deleted"
    },
    "error": {
      "notAuthorizedToAccessPage": "Sorry, you are not authorized to access this page.",
      "changesSaved": "Failed to Save changes",
      "addAssetsToWithName": "Failed to add assets to {{name}}",
      "addWithName": "Failed to add {{name}}",
      "add": "Failed to add",
      "createWithName": "Failed to create {{name}}",
      "create": "Failed to create",
      "update": "Failed to update",
      "updateWithName": "Failed to update {{name}}",
      "updatingWithName": "Error updating {{name}}",
      "editWithName": "Failed to edit {{name}}",
      "move": "Failed to move",
      "remove": "Failed to remove",
      "removeWithName": "Failed to remove {{name}}",
      "removeAssetsWithName": "Failed to remove assets from {{name}}",
      "delete": "Failed to delete",
      "deleteWithName": "Failed to delete {{name}}",
      "revokeWithName": "Failed to revoke {{name}}",
      "loadWithName": "Failed to load {{name}}"
    },
    "doYouWantTo": {
      "confirmDeleteOwnershipType": "Are you sure you want to delete this ownership type?",
      "confirmDelete": "Confirm Delete",
      "confirmRemovalWithName": "Confirm {{name}} Removal",
      "removeTitleWithName": "Do you want to remove {{name}} ?",
      "removeContentWithTheName": "Are you sure you want to remove the {{name}} ?",
      "removeContentWithThisName": "Are you sure you want to remove this {{name}} ?",
      "deleteContentWithThisName": "Are you sure you want to delete this {{name}} ?"
    }
  },
  "copy": {
    "copyColumnUrn": "Copy Column Urn",
    "copyColumnFieldPath": "Copy Column Field Path",
    "copyLink": "Copy Link",
    "copiedUrl": "Copied URL",
    "urnTooltip": "Copy URN. An URN uniquely identifies an entity on DataHub.",
    "copyUrnForThis": "Copy the URN for this {{type}}. An URN uniquely identifies an entity on DataHub.",
    "copyShareableLinkToEntity": "Copy a shareable link to this entity."
  },
  "error": {
    "failedToFindRendererCorrespondingToRenderType": "Failed to find renderer corresponding to renderType {{name}}",
    "pageNotFound": "The page your requested was not found",
    "sidebarFailedToLoad": "The sidebar failed to load.",
    "bulkEditIncludeUnauthorizedEntity": "Your bulk edit selection included entities that you are unauthorized to update. The bulk edit being performed will not be saved.",
    "failedToAssignRoleToUsers": "Failed to assign Role to users",
    "unsupportedTestResultType": "Unsupported Test Result Type {{result}} provided.",
    "errorSection": {
      "ressourcesLabel": {
        "project": "DataHub Project",
        "docs": "DataHub Docs",
        "github": "DataHub GitHub"
      },
      "somethingWentWrong": "Something went wrong.",
      "anUnexpectedErrorOccurred": "An unexpected error occurred. Please try again later, or reach out to your administrator",
      "needSupport": "Need support?",
      "checkOutThisRessources": "Check out these resources:",
      "needSupport_component": "<bold>Need support?</bold> Check out these resources:"
    }
  },
  "relatedTermType": {
    "contains": "Contains",
    "inherits": "Inherits",
    "containedBy": "Contained by",
    "inheritedBy": "Inherited by"
  }
}